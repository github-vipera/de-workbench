{"version":3,"file":"input.js","sourceRoot":"","sources":["../../src/element/input.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AACX;;;;GAIG;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAA;AAC5B,OAAO,EAAiB,aAAa,EAAc,MAAM,WAAW,CAAA;AAEpE,MAAM,2BAA4B,OAAO;IACvC,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAA;IACtD,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAClC,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAA;IAChC,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;IAChD,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;YACtB,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAA;YAC3B,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACtB,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC/B,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QACtB,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YACpC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAA;YAChC,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,MAAM,CAAC,KAAK,CAAA;AACd,CAAC;AAED,MAAM,sBAAuB,OAAO;IAClC,IAAI,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,CAAA;IAClC,IAAI,OAAO,GAAG,IAAI,CAAA;IAClB,IAAI,SAAS,GAAG,MAAM,CAAA;IACtB,IAAI,SAAS,GAAG,cAAc,CAAA;IAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACxB,KAAK,CAAC,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,CAAA;IACxD,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,SAAS,GAAG,OAAO,CAAC,IAAI,CAAA;IAC1B,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QACtB,SAAS,GAAG,OAAO,CAAC,SAAS,CAAA;IAC/B,CAAC;IACD,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAA,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,KAAK,MAAM;gBACT,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;gBAC3B,KAAK,CAAA;YACP,KAAK,UAAU;gBACb,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAA;gBAC7B,KAAK,CAAA;QACT,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;QAC9B,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IACtC,CAAC;IACD,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IACrC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACnB,MAAM,CAAA,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,KAAK,MAAM;gBACT,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;oBACtC,YAAY,CAAC,OAAO,CAAC,CAAA;oBACrB,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;wBACxB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;oBAC7B,CAAC,EAAE,GAAG,CAAC,CAAA;gBACT,CAAC,CAAC,CAAA;gBACF,KAAK,CAAA;YACP,KAAK,UAAU;gBACb,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA;gBACtE,KAAK,CAAA;QACT,CAAC;IACH,CAAC;IACD,MAAM,CAAC,KAAK,CAAA;AACd,CAAC","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport { get } from 'lodash'\nimport { insertElement, createElement, createText } from './element'\n\nexport function createTextEditor (options) {\n  let input = document.createElement('atom-text-editor')\n  input.setAttribute('mini', 'true')\n  let editor = input['getModel']()\n  if (options.placeholder) {\n    editor.setPlaceholderText(options.placeholder)\n  }\n  if (options.change) {\n    editor.onDidChange(() => {\n      let text = editor.getText()\n      options.change(text)\n    })\n  }\n  if (options.value) {\n    editor.setText(options.value)\n  }\n  if (options.keyEvents) {\n    input.addEventListener('keyup', (e) => {\n      if (options.keyEvents[e.keyCode]) {\n        options.keyEvents[e.keyCode]()\n      }\n    })\n  }\n  return input\n}\n\nexport function createInput (options) {\n  let input = createElement('input')\n  let handler = null\n  let inputType = 'text'\n  let className = 'form-control'\n  if (options.placeholder) {\n    input.setAttribute('placeholder', options.placeholder)\n  }\n  if (options.type) {\n    inputType = options.type\n  }\n  if (options.className) {\n    className = options.className\n  }\n  if (get(options, 'value')) {\n    switch(inputType) {\n      case 'text':\n        input.value = options.value\n        break\n      case 'checkbox':\n        input.checked = options.value\n        break\n    }\n  }\n  if (options.readOnly === true) {\n    input.setAttribute('readonly', true)\n  }\n  input.className = className;\n  input.setAttribute('type', inputType)\n  if (options.change) {\n    switch(inputType) {\n      case 'text':\n        input.addEventListener('keydown', (e) => {\n          clearTimeout(handler)\n          handler = setTimeout(() => {\n            options.change(input.value)\n          }, 500)\n        })\n        break\n      case 'checkbox':\n        input.addEventListener('change', (e) => options.change(input.checked))\n        break\n    }\n  }\n  return input\n}\n"]}