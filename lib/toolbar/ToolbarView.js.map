{"version":3,"file":"ToolbarView.js","sourceRoot":"","sources":["../../src/toolbar/ToolbarView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport { parse } from 'path';\nimport { EventEmitter }  from 'events';\nimport { get } from 'lodash';\n\nconst { CompositeDisposable } = require('atom');\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject\n} from '../element/index';\nimport { UIRunSelectorComponent } from '../ui-components/UIRunSelectorComponent'\nimport { UIStatusIndicatorComponent, UIIndicatorStatus } from '../ui-components/UIStatusIndicatorComponent'\n\n\nexport interface ToolbarOptions {\n  didNewProject?: Function,\n  didRun?: Function,\n  didStop?: Function,\n  didBuild?: Function,\n  didReload?:Function,\n  didOpenJSConsole?:Function,\n  didProjectSettings?: Function,\n  didToggleToolbar?: Function,\n  didToggleDebugArea?: Function\n  didSelectProjectForRun?: Function,\n  didToggleConsole?: Function,\n  didSelectTaskClick?:Function,\n  didTaskSelected?:Function\n}\n\n\nexport interface ToolbarStatus {\n  btnRunEnable?:boolean\n  btnStopEnable?:boolean\n  btnReloadEnable?:boolean\n  btnOpenJSConsoleEnable?:boolean\n  prjSelectorEnable?:boolean\n  progressStatus?: UIIndicatorStatus\n  progressMsg?: string\n  progressIcon?: string\n}\n\nexport class ToolbarView {\n\n  private element: HTMLElement;\n  private events: EventEmitter;\n  private subscriptions:any = new CompositeDisposable();\n\n  private newProjectButton: HTMLElement;\n  private runButton: HTMLElement;\n  private stopButton: HTMLElement;\n  private logoElement: HTMLElement;\n  private buildButton: HTMLElement;\n  private runSelector:UIRunSelectorComponent;\n  private statusIndicator: UIStatusIndicatorComponent;\n  private reloadButton: HTMLElement;\n  private openJSConsoleButton: HTMLElement;\n\n  private toolbarElement: HTMLElement;\n  private toolbarAnchor: HTMLElement;\n\n  private isVisible: boolean;\n\n  constructor (options: ToolbarOptions) {\n    this.events = new EventEmitter();\n\n    this.toolbarElement = createElement('de-workbench-toolbar');\n\n    this.logoElement = createIcon('logo')\n    insertElement(this.toolbarElement, this.logoElement)\n\n    //<Label class=\"fa\" text=\"\\uf293\"></Label>\n    /*let testFA = createElement('a',{\n      elements: [ createText('pippo')],\n      className : \"fa\"\n    })\n    testFA.setAttribute(\"text\",\"\\uf293\")\n    insertElement(this.element, testFA)*/\n\n    this.newProjectButton = createButton({\n      click: () => {\n        this.events.emit('didNewProject');\n      }\n    },[\n      createIcon('newproj')\n    ]);\n    atom[\"tooltips\"].add(this.newProjectButton, {title:'Create a New Project'})\n    insertElement(this.toolbarElement, this.newProjectButton)\n\n    this.buildButton = createButton({\n      disabled: false,\n      click: () => {\n        this.events.emit('didProjectSettings');\n      }\n    },[\n      createIcon('build')\n    ]);\n    atom[\"tooltips\"].add(this.buildButton, {title:'Open Project Settings'})\n    insertElement(this.toolbarElement, this.buildButton)\n\n    this.createRunComponents();\n    this.createStatusIndicator();\n\n    // toggle panes\n    let toggleButtons = this.createToogleButtons();\n    toggleButtons.classList.add('bugs-toggle-buttons')\n    insertElement(this.toolbarElement, toggleButtons)\n\n\n    attachEventFromObject(this.events, [\n      'didRun',\n      'didStop',\n      'didReload',\n      'didOpenJSConsole',\n      'didNewProject',\n      'didBuild',\n      'didToggleToolbar',\n      'didToggleDebugArea',\n      'didProjectSettings',\n      'didSelectProjectForRun',\n      'didSelectTaskClick',\n      'didTaskSelected',\n      'didToggleConsole'\n    ], options);\n\n    this.toolbarAnchor = createElement('de-workbench-toolbar-anchor',{\n      elements: [\n        createElement('span', {\n          elements: [ createText(' ')]\n        })\n      ]\n    });\n    this.toolbarAnchor.addEventListener('click',()=>{\n      this.toggle();\n    })\n\n    this.element = createElement('de-workbench-toolbar-container',{\n      elements: [ this.toolbarElement, this.toolbarAnchor ]\n    })\n\n    this.isVisible = true;\n  }\n\n  private toggleAtomTitleBar (value: boolean) {\n    let titleBar = document.querySelector('atom-panel .title-bar') as HTMLElement\n    if (get(titleBar, 'nodeType', false) && titleBar.parentNode) {\n      (<HTMLElement> titleBar.parentNode).style.display = value ? null : 'none'\n    }\n  }\n\n  private createRunComponents(){\n\n    let runContainer:HTMLElement = createElement('div',{\n      className:\"de-workbench-uiruncomponent\"\n    });\n\n    this.runButton = createButton({\n      click: () => {\n        this.events.emit('didRun');\n      }\n    },[\n      createIcon('run')\n    ]);\n    insertElement(runContainer, this.runButton)\n\n\n    this.stopButton = createButton({\n      disabled: true,\n      click: () => {\n        this.events.emit('didStop');\n      }\n    },[\n      createIcon('stop')\n    ]);\n    insertElement(runContainer, this.stopButton)\n\n    this.runSelector = new UIRunSelectorComponent(this.events);\n    insertElement(runContainer,this.runSelector.element());\n\n    this.reloadButton = createButton({\n      disabled: true,\n      click: () => {\n        this.events.emit('didReload');\n      }\n    },[\n      createIcon('refresh')\n    ]);\n    insertElement(runContainer, this.reloadButton)\n\n\n    this.openJSConsoleButton = createButton({\n      disabled: true,\n      click: () => {\n        this.events.emit('didOpenJSConsole');\n      }\n    },[\n      createIcon('zap')\n    ]);\n    insertElement(runContainer, this.openJSConsoleButton)\n\n    insertElement(this.toolbarElement,runContainer);\n  }\n\n  private createStatusIndicator(){\n    this.statusIndicator = new UIStatusIndicatorComponent(\"No task in progress\");\n    insertElement(this.toolbarElement,this.statusIndicator.element());\n  }\n\n  public toggle(){\n    if (this.isVisible){\n      this.isVisible = false;\n      this.toolbarElement.style.display = \"none\";\n      this.toolbarAnchor.style.display = \"block\";\n    } else {\n      this.isVisible = true;\n      this.toolbarElement.style.display = \"block\";\n      this.toolbarAnchor.style.display = \"none\";\n    }\n  }\n\n  private createToogleButtons():HTMLElement{\n    return createGroupButtons([\n      createButton({\n        tooltip: {\n          subscriptions: this.subscriptions,\n          title: 'Toggle Toolbar'\n        },\n        click: () => this.events.emit('didToggleToolbar')\n      }, [createIcon('up-arrow')]),\n      createButton({\n        tooltip: {\n          subscriptions: this.subscriptions,\n          title: 'Toggle Console'\n        },\n        click: () => this.events.emit('didToggleConsole')\n      }, [createIcon('panel-bottom')]),\n      createButton({\n        tooltip: {\n          subscriptions: this.subscriptions,\n          title: 'Toggle Debug Area'\n        },\n        click: () => this.events.emit('didToggleDebugArea')\n      }, [createIcon('panel-right')])\n    ]);\n  }\n\n  public displayAsTitleBar () {\n    this.toggleAtomTitleBar(false)\n    this.toolbarElement.classList.add('bugs-title-bar')\n  }\n\n  public displayDefault () {\n    this.toggleAtomTitleBar(true)\n    this.toolbarElement.classList.remove('bugs-title-bar')\n  }\n\n  public setTaskConfiguration(configuration){\n    this.runSelector.setTaskConfiguration(configuration);\n  }\n\n  public destroy () {\n    this.toolbarElement.remove();\n    this.toolbarAnchor.remove();\n    this.element.remove();\n    this.subscriptions.dispose();\n  }\n\n  public getElement (): HTMLElement {\n    return this.element;\n  }\n\n  // Utilities:\n  public setInProgressStatus(msg:string,iconName?:string){\n    this.statusIndicator.setStatus(UIIndicatorStatus.Busy,msg,iconName || 'status-warning');\n    this.runButton.setAttribute('disabled','true');\n    this.stopButton.removeAttribute('disabled');\n  }\n  public setSuccessStatus(msg:string,iconName?:string){\n    this.statusIndicator.setStatus(UIIndicatorStatus.Success,msg,iconName || 'status-success');\n    this.stopButton.setAttribute('disabled','true');\n    this.runButton.removeAttribute('disabled');\n  }\n  public setIdleStatus(msg:string,iconName?:string){\n    this.statusIndicator.setStatus(UIIndicatorStatus.Idle,msg,iconName);\n    this.stopButton.setAttribute('disabled','true');\n    this.runButton.removeAttribute('disabled');\n  }\n  public setErrorStatus(msg:string,iconName?:string){\n    this.statusIndicator.setStatus(UIIndicatorStatus.Error,msg,iconName || 'status-error');\n    this.stopButton.setAttribute('disabled','true');\n    this.runButton.removeAttribute('disabled');\n  }\n\n  /**\n   * Update the progress indicator\n   * @param  {ToolbarStatus} status [description]\n   * @return {[type]}               [description]\n   */\n  public updateStatus(status:ToolbarStatus){\n    if(status.btnReloadEnable != null){\n      this.updateButtonStatus(this.reloadButton,status.btnReloadEnable);\n    }\n    if(status.btnOpenJSConsoleEnable != null){\n      this.updateButtonStatus(this.openJSConsoleButton,status.btnOpenJSConsoleEnable);\n    }\n    if(status.btnStopEnable != null){\n      this.updateButtonStatus(this.stopButton,status.btnStopEnable);\n    }\n    if(status.btnRunEnable != null){\n      this.updateButtonStatus(this.runButton,status.btnRunEnable);\n    }\n    if(status.prjSelectorEnable != null){\n      this.runSelector.setEnable(false);\n    }\n    if(status.progressStatus != null){\n      this.statusIndicator.setStatus(status.progressStatus);\n    }\n    if(status.progressMsg != null ){\n      this.statusIndicator.setText(status.progressMsg,status.progressIcon);\n    }\n  }\n\n  private updateButtonStatus(element:HTMLElement,enabled:boolean){\n    if(!element){\n      throw new Error(\"updateButtonStatus fail: element is null\");\n    }\n    if(enabled){\n      element.removeAttribute('disabled');\n    }else{\n      element.setAttribute('disabled','true');\n    }\n  }\n\n}\n"]}