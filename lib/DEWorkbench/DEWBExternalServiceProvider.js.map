{"version":3,"file":"DEWBExternalServiceProvider.js","sourceRoot":"","sources":["../../src/DEWorkbench/DEWBExternalServiceProvider.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAUX,MAAM,EAAC,eAAe,EAAE,sBAAsB,EAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAEtE,MAAM;IAOJ;IAEA,CAAC;IAED,MAAM,CAAC,WAAW;QACd,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,WAAW,CAAC,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;QAC7C,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,GAAG;QACR,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,aAAa,EAAE,CAAA;IACtB,CAAC;IAED,MAAM;QACJ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,WAAW;QACT,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,IAAE,IAAI,CAAC,CAAA;IAC1B,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAA;QACtF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClB,EAAC,IAAI,EAAE,sBAAsB,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAC;SAC5E,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QAEtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG;YACpB,IAAI,MAAM,CAAC;YACX,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,+BAA+B;YAC/B,wDAAwD;YACxD,IAAI,CAAC;gBACH,IAAI,SAAS,GAAG,IAAI,CAAC,CAAA,wBAAwB;gBAC7C,IAAI,WAAW,GAAG,eAAe,CAAC,MAAM,sBAAsB,CAAC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1G,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;gBAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACtB,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAA,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACnB,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACd,KAAK,EAAE,MAAM;YACb,cAAc,EAAE,KAAK;SACtB,CAAC,CAAA;IACJ,CAAC;IAEM,UAAU;QACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CAEF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport { Logger } from '../logger/Logger'\n\nconst {allowUnsafeEval, allowUnsafeNewFunction} = require('loophole');\n\nexport class InkProvider {\n\n  private static instance: InkProvider;\n\n  private _ink;\n  private _cons;\n\n  private constructor() {\n\n  }\n\n  static getInstance() {\n      if (!InkProvider.instance) {\n          InkProvider.instance = new InkProvider();\n      }\n      return InkProvider.instance;\n  }\n\n  setInk(ink){\n    this._ink = ink;\n    this.createConsole()\n  }\n\n  getInk(){\n    return this._ink;\n  }\n\n  isAvailable(){\n    return (this._ink!=null)\n  }\n\n  protected createConsole(){\n    this._cons = InkProvider.getInstance().getInk().Console.fromId('dewb-language-client')\n    this._cons.setModes([\n      {name: 'DE Workbench Console', default: true, grammar: 'source.javascript'}\n    ]);\n\n    let cons = this._cons;\n\n    this._cons.onEval((arg)=>{\n      var editor;\n      editor = arg.editor;\n      cons.logInput();\n      cons.done();\n      //console.log(editor.getText())\n      //Logger.getInstance().info(\"Typed \", editor.getText() )\n      try {\n        let evaluated = null;//eval(editor.getText())\n        var docTemplate = allowUnsafeEval(() => allowUnsafeNewFunction(() => evaluated = eval(editor.getText())));\n        cons.stdout(evaluated);\n        cons.stderr(\"Errorone!!!\")\n        return cons.input();\n      } catch (error){\n        cons.stderr(error);\n        return cons.input();\n      }\n    });\n\n    this._cons.open({\n      split: 'down',\n      searchAllPanes: false\n    })\n  }\n\n  public getConsole(){\n    return this._cons;\n  }\n\n}\n"]}