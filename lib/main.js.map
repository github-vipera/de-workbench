{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nconst { Logger } = require( './logger/Logger')\nconst { ConsumedServices } = require ('./DEWorkbench/ConsumedServices')\nconst { InkProvider } = require('./DEWorkbench/DEWBExternalServiceProvider')\nconst { CompositeDisposable } = require('atom')\n\nmodule.exports = {\n\n  deWorkbench: null,\n  toolbarPanel: null,\n  subscriptions: null,\n  loggerView: null,\n  ink: null,\n  cordovaPluginsProvidersManager:null,\n\n  activate (state: any) {\n      setTimeout(this.deferredActivation.bind(this),100);\n  },\n\n  async deferredActivation(){\n    Logger.consoleLog(\"DEWB deferredActivation.\");\n    await require('atom-package-deps').install('de-workbench', false).then(function(res){\n      Logger.consoleLog(\"Dep packages installed.\");\n    })\n\n\n    let DEWorkbenchClass = require('./DEWorkbench/DEWorkbench').DEWorkbench;\n    this.deWorkbench = new DEWorkbenchClass({\n    });\n\n    let value = 'HeaderPanel';\n    this.toolbarPanel = atom.workspace[`add${value}`]({\n      item: this.deWorkbench.getToolbarElement()\n    });\n\n    // add commands\n    let commands = atom.commands.add('atom-workspace', {\n        'dewb-menu-view-:toolbar-toggle': () => this.toggleToolbar(),\n        'dewb-menu-view-:prjinspector-toggle': () => this.showProjectSettings(),\n        'dewb-menu-view-:pushtool-show': () => this.showPushTool(),\n        'dewb-menu-view-:servers-show':()=> this.deWorkbench.viewManager.openView(this.viewManagerClass().VIEW_SERVERS),\n        'dewb-menu-view-:bookmarks-toggle':()=> this.deWorkbench.viewManager.openView(this.viewManagerClass().VIEW_BOOKMARKS),\n        'dewb-menu-view-:loggerview-toggle': () => this.toggleLogger()\n      });\n    this.subscriptions = new CompositeDisposable();\n    // add commands subs\n    this.subscriptions.add(commands);\n\n    this.serverManagerInstance()\n    this.cordovaPluginsProvidersManager = this.cordovaPluginsProvidersManagerInstance();// CordovaPluginsProvidersManager.getInstance();\n\n    //this.checkForDECli(); move this on extension plugin!\n  },\n\n  deactivate () {\n    Logger.consoleLog('DEWB deactivated.');\n    if(this.deWorkbench){\n      this.deWorkbench.destroy();\n    }\n  },\n\n  \n  showPushTool(){\n    let currentprojectPath:string = this.projectManagerInstance().getCurrentProjectPath();\n    if (currentprojectPath){\n      this.deWorkbench[\"viewManager\"].openView(this.viewManagerClass.VIEW_PUSHTOOLS(currentprojectPath));\n    }\n  },\n  \n\n  showProjectSettings(){\n    this.deWorkbench.showProjectSettings();\n  },\n\n  toggleToolbar() {\n    Logger.consoleLog(\"Toggle toolbar\");\n    this.deWorkbench.toggleToolbar()\n  },\n\n  toggleLogger(){\n    Logger.consoleLog(\"Toggle Logger\");\n    this.deWorkbench.toggleLogger();\n  },\n\n  consumeInk: function (ink) {\n    ConsumedServices.ink = ink;\n    this.ink = ink;\n  },\n\n  provideCordovaPluginsProvider () {\n    Logger.consoleLog(\"consumeDEWBCordovaPluginsProvider called\")\n    return this.cordovaPluginsProvidersManagerInstance();\n  },\n\n  provideLogger () {\n    Logger.consoleLog(\"consumeLogger called\")\n    return Logger.getInstance();\n  },\n\n  provideProjectManager() {\n    Logger.consoleLog(\"provideProjectManager called\")\n    return this.projectManagerInstance();\n  },\n\n  provideEventBus() {\n    Logger.consoleLog(\"provideEventBus called\")\n    return this.eventBusInstance();\n  },\n\n  provideServerManager(){\n    Logger.consoleLog(\"provideServerManager called\")\n    return this.serverManagerInstance();\n  },\n\n  provideExecutorService(){\n    Logger.consoleLog(\"provideExecutorService called\")\n    return this.executorServiceInstance();\n  },\n\n  executorServiceInstance():any{\n    return require('./DEWorkbench/services/ExecutorService').ExecutorService.getInstance();\n  },\n\n  projectManagerInstance():any{\n    return require('./DEWorkbench/ProjectManager').ProjectManager.getInstance();\n  },\n\n  serverManagerInstance():any{\n    return require('././DEWorkbench/services/ServerManager').ServerManager.getInstance();\n  },\n\n  eventBusInstance():any{\n    return require('./DEWorkbench/EventBus').EventBus.getInstance();\n  },\n\n  viewManagerClass():any{\n    return require('./DEWorkbench/ViewManager').ViewManager;\n  },\n\n  cordovaPluginsProvidersManagerInstance():any {\n    return require('./DEWorkbench/services/CordovaPluginsProvidersManager').CordovaPluginsProvidersManager.getInstance();\n  }\n\n}\n\n"]}