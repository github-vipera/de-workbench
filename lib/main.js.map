{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nconst { CompositeDisposable } = require('atom')\ndeclare function require(moduleName: string): any;\n//import { DEWorkbench } from './DEWorkbench/DEWorkbench'\nimport { Logger } from './logger/Logger'\nimport { InkProvider } from './DEWorkbench/DEWBExternalServiceProvider'\nimport { CordovaPluginsProvidersManager } from './DEWorkbench/services/CordovaPluginsProvidersManager'\nimport { ServerManager } from '././DEWorkbench/services/ServerManager'\nimport { ProjectManager } from './DEWorkbench/ProjectManager'\nimport { EventBus } from './DEWorkbench/EventBus'\nimport { ConsumedServices } from './DEWorkbench/ConsumedServices'\nimport { GlobalPreferences } from './DEWorkbench/GlobalPreferences'\nimport { ViewManager } from './DEWorkbench/ViewManager'\n\nexport default {\n\n  deWorkbench: null,\n  toolbarPanel: null,\n  subscriptions: null,\n  loggerView: null,\n  ink: null,\n  cordovaPluginsProvidersManager:null,\n\n  activate (state: any) {\n      Logger.consoleLog(\"DEWB activated.\");\n\n      ServerManager.getInstance();\n\n      this.cordovaPluginsProvidersManager = CordovaPluginsProvidersManager.getInstance();\n      //this.deferredActivation();\n      setTimeout(this.deferredActivation.bind(this),1000);\n  },\n\n  deferredActivation(){\n    Logger.consoleLog(\"DEWB deferredActivation.\");\n\n    require('atom-package-deps').install('de-workbench', false).then(function(res){\n      Logger.consoleLog(\"Dep packages installed.\");\n    })\n\n    let DEWorkbenchClass = require('./DEWorkbench/DEWorkbench').DEWorkbench;\n    this.deWorkbench = new DEWorkbenchClass({\n    });\n    window[\"deWorkbench\"] = this.deWorkbench; //make it public only for debugging purpose\n    window[\"DEWBGlobalPreferences\"] =  GlobalPreferences.getInstance()//make it public only for debugging purpose\n\n    let value = 'HeaderPanel';\n    this.toolbarPanel = atom.workspace[`add${value}`]({\n      item: this.deWorkbench.getToolbarElement()\n    });\n\n    // add commands\n    let commands = atom.commands.add('atom-workspace', {\n        'dewb-menu-view-:toolbar-toggle': () => this.toggleToolbar(),\n        'dewb-menu-view-:prjinspector-toggle': () => this.showProjectSettings(),\n        'dewb-menu-view-:pushtool-show': () => this.showPushTool(),\n        'dewb-menu-view-:servers-show':()=> this.deWorkbench.viewManager.openView(ViewManager.VIEW_SERVERS),\n        'dewb-menu-view-:bookmarks-toggle':()=> this.deWorkbench.viewManager.openView(ViewManager.VIEW_BOOKMARKS),\n        'dewb-menu-view-:loggerview-toggle': () => this.toggleLogger()\n      });\n    this.subscriptions = new CompositeDisposable();\n    // add commands subs\n    this.subscriptions.add(commands);\n  },\n\n  deactivate () {\n      Logger.consoleLog('DEWB deactivated.');\n      if(this.deWorkbench){\n        this.deWorkbench.destroy();\n      }\n  },\n\n  showPushTool(){\n    let currentprojectPath:string = ProjectManager.getInstance().getCurrentProjectPath();\n    if (currentprojectPath){\n      this.deWorkbench.viewManager.openView(ViewManager.VIEW_PUSHTOOLS(currentprojectPath));\n    }\n  },\n\n  showProjectSettings(){\n    this.deWorkbench.showProjectSettings();\n  },\n\n  toggleToolbar() {\n    Logger.consoleLog(\"Toggle toolbar\");\n    this.deWorkbench.toggleToolbar()\n  },\n\n  toggleLogger(){\n    Logger.consoleLog(\"Toggle Logger\");\n    this.deWorkbench.toggleLogger();\n  },\n\n  consumeInk: function (ink) {\n    ConsumedServices.ink = ink;\n    this.ink = ink;\n  },\n\n  provideCordovaPluginsProvider () {\n    Logger.consoleLog(\"consumeDEWBCordovaPluginsProvider called\")\n    return CordovaPluginsProvidersManager.getInstance();\n  },\n\n  provideLogger () {\n    Logger.consoleLog(\"consumeLogger called\")\n    return Logger.getInstance();\n  },\n\n  provideProjectManager() {\n    Logger.consoleLog(\"provideProjectManager called\")\n    return ProjectManager.getInstance();\n  },\n\n  provideEventBus() {\n    Logger.consoleLog(\"provideEventBus called\")\n    return EventBus.getInstance();\n  },\n\n  provideServerManager(){\n    Logger.consoleLog(\"provideServerManager called\")\n    return ServerManager.getInstance();\n  }\n\n}\n"]}