{"version":3,"file":"UIButtonMenu.js","sourceRoot":"","sources":["../../src/ui-components/UIButtonMenu.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../element/index';\n\nimport { UIComponent, UIBaseComponent } from './UIComponent'\nimport { Logger } from '../logger/Logger'\n\nconst SelectListView = require('atom-select-list')\n\nexport interface UIMenuItem {\n  displayName?:string,\n  value:string,\n  element?:HTMLElement\n}\n\nexport class UIButtonMenu extends UIBaseComponent {\n\n  private items:Array<UIMenuItem>;\n  private listView:any;\n  private panel:any;\n  private infoMessage:string;\n  private emptyMessage:string;\n  private onSelectListener:Function;\n\n  constructor(){\n    super();\n    this.initUI();\n  }\n\n  private initUI(){\n    this.mainElement = createElement('button',{\n      elements: [\n        createText(\"Button Menu\")\n      ],\n      className: 'btn inline-block-tigh btn-primary de-workbench-button-menu'\n    })\n    this.mainElement.addEventListener('click',(evt)=>{\n      this.showMenu();\n    });\n\n  }\n\n  public setCaption(caption:string):UIButtonMenu{\n    this.mainElement.innerText=caption;\n    return this;\n  }\n\n  public setMenuItems(items:Array<UIMenuItem>):UIButtonMenu {\n    this.items = items;\n    return this;\n  }\n\n  public showMenu(){\n    this.listView = new SelectListView({\n      items: this.items,\n      infoMessage: this.infoMessage,\n      emptyMessage: this.emptyMessage,\n      elementForItem: this.createMenuElement,\n      filterKeyForItem: (item) => item.displayName,\n      didConfirmSelection: (item) => {\n        Logger.consoleLog(\"Selected menu item \", item)\n        this.dismissMenu()\n        setTimeout(()=>{\n            this.onItemSelected(item)\n          },50\n        )\n      },\n      didCancelSelection: () => {\n        this.dismissMenu()\n      }\n    });\n    this.panel = atom.workspace.addModalPanel({\n      item: this.listView\n    });\n    this.listView.focus();\n    this.panel.show()\n  }\n\n  onItemSelected(item:UIMenuItem){\n    if (this.onSelectListener){\n      this.onSelectListener(item)\n    }\n  }\n\n  async dismissMenu(){\n    await this.panel.destroy();\n    await this.listView.destroy();\n  }\n\n  createMenuElement(item:UIMenuItem):HTMLElement {\n    var content:any = null;\n    if (item.element){\n        content = item.element\n    }\n    else if (item.displayName){\n      content = createText(item.displayName);\n    } else {\n        content = createText(item.value);\n    }\n    var el = createElement('li', { elements: [content] })\n    el.setAttribute('menu-item-value', item.value)\n    el.classList.add('de-workbench-menu-item')\n    return el;\n  }\n\n  public setInfoMessage(message:string):UIButtonMenu{\n    this.infoMessage = message;\n    return this;\n  }\n\n  public setEmptyMessage(message:string):UIButtonMenu{\n    this.emptyMessage = message;\n    return this;\n  }\n\n  public setOnSelectionListener(listener:Function):UIButtonMenu{\n    this.onSelectListener = listener;\n    return this;\n  }\n\n\n}\n"]}