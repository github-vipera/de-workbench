{"version":3,"file":"UICommonsFactory.js","sourceRoot":"","sources":["../../src/ui-components/UICommonsFactory.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAEX;;;;GAIG;AAEH,OAAO,EACN,UAAU,EACV,aAAa,EAQb,MAAM,kBAAkB,CAAC;AAG1B,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAA;AAGlF,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,uDAAU,CAAA;IACV,uDAAU,CAAA;AACd,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAYD,MAAM;IAEG,MAAM,CAAC,iBAAiB,CAAC,OAA0B;QACxD,gBAAgB;QAEhB,IAAI,aAAa,GAAG,IAAI,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC;aAC9D,SAAS,CAAC,IAAI,cAAc,EAAE;aACxB,KAAK,CAAC,QAAQ,CAAC;aACf,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC;aACvD,gBAAgB,CAAC,GAAE,EAAE;YAClB,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;QACjD,CAAC,CAAC,CAAC;aACR,SAAS,CAAC,IAAI,cAAc,EAAE;aACxB,KAAK,CAAC,aAAa,CAAC;aACpB,aAAa,CAAC,SAAS,CAAC;aACxB,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC;aACrD,gBAAgB,CAAC,GAAE,EAAE;YACpB,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAC,CAAA;QACX,IAAI,sBAAsB,GAAG,aAAa,CAAC,KAAK,EAAC;YAC/C,QAAQ,EAAE;gBACR,aAAa,CAAC,OAAO,EAAE;aACxB;YACD,SAAS,EAAE,qCAAqC;SACjD,CAAC,CAAC;QAEH,IAAI,aAAa,GAAG,aAAa,CAAC,KAAK,EAAC;YACtC,QAAQ,EAAE,CAAC,sBAAsB,CAAC;YAClC,SAAS,EAAE,+CAA+C;SAC3D,CAAC,CAAA;QAEF,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAEM,MAAM,CAAC,mBAAmB;QAC/B,wFAAwF;QACxF,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,EAAC;YAC/B,SAAS,EAAE,2CAA2C;SACvD,CAAC,CAAA;QACF,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,sBAAsB,CAAC,KAAY;QAC/C,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,EAAC;YAC/B,QAAQ,EAAE;gBACR,UAAU,CAAC,KAAK,CAAC;aAClB;YACD,SAAS,EAAE,oCAAoC;SAChD,CAAC,CAAA;QACF,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;CAEF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../element/index';\n\nimport { UIInputFormElement } from './UIInputFormElement'\nimport { UIButtonGroup, UIButtonConfig, UIButtonGroupMode } from './UIButtonGroup'\n\n\nexport enum FormActionType {\n    Cancel = 0,\n    Commit = 1\n}\n\nexport interface FormActionsOptions {\n  cancel: {\n    caption:string;\n  },\n  commit: {\n    caption:string;\n  },\n  actionListener:any;\n}\n\nexport class UICommonsFactory {\n\n  public static createFormActions(options:FormActionsOptions):HTMLElement {\n    //Action buttons\n\n    let actionButtons = new UIButtonGroup(UIButtonGroupMode.Standard)\n      .addButton(new UIButtonConfig()\n            .setId('cancel')\n            .setCaption(options.cancel.caption /*'Revert Changes'*/)\n            .setClickListener(()=>{\n                options.actionListener(FormActionType.Cancel)\n            }))\n      .addButton(new UIButtonConfig()\n            .setId('saveChanges')\n            .setButtonType('success')\n            .setCaption(options.commit.caption /*'Save changes'*/)\n            .setClickListener(()=>{\n              options.actionListener(FormActionType.Commit)\n            }))\n    let actionButtonsContainer = createElement('div',{\n      elements: [\n        actionButtons.element()\n      ],\n      className: 'de-workbench-ui-form-action-buttons'\n    });\n\n    let mainContainer = createElement('div',{\n      elements: [actionButtonsContainer],\n      className: 'de-workbench-ui-form-action-buttons-container'\n    })\n\n    return mainContainer;\n  }\n\n  public static createFormSeparator():HTMLElement {\n    //<hr class=\"form-divider\" width=\"100%\" size=\"1\" style=\"border-top: 1px solid #606060;\">\n    let divider = createElement('hr',{\n      className: 'form-divider de-workbench-ui-form-divider'\n    })\n    return divider;\n  }\n\n  public static createFormSectionTitle(title:string):HTMLElement {\n    let divider = createElement('h2',{\n      elements: [\n        createText(title)\n      ],\n      className: 'de-workbench-ui-form-section-title'\n    })\n    return divider;\n  }\n\n}\n"]}