{"version":3,"file":"UISelectButton.js","sourceRoot":"","sources":["../../src/ui-components/UISelectButton.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor,\n  createSelect,\n  createOption\n} from '../element/index';\n\nimport { UIComponent, UIBaseComponent } from './UIComponent'\nimport { UISelect, UISelectListener,UISelectItem} from './UISelect'\nimport {find} from 'lodash'\n\nexport interface UISelectButtonOptions {\n  withArrow?:boolean\n  rightIcon?:string\n}\n\nexport class UISelectButton extends UIBaseComponent implements UISelectListener {\n  private select:UISelect;\n  private txtSelected:Text;\n  private selectedItem:UISelectItem;\n  private emptyText:string;\n  private uiOptions:UISelectButtonOptions;\n  constructor(select:UISelect,emptyText:string,options?:UISelectButtonOptions){\n    super();\n    this.select=select;\n    this.emptyText = emptyText;\n    this.selectedItem=null;\n    this.uiOptions = options || {};\n    this.select.addSelectListener(this);\n    this.initUI();\n  }\n  initUI():void{\n    this.txtSelected = createText(this.emptyText);\n    let elements:Array<Text | HTMLElement> = [\n      this.txtSelected,\n      this.select.element(),\n    ];\n    if(this.uiOptions.withArrow){\n      elements[elements.length] = createElement('div', {\n        className: 'bugs-scheme-arrow'\n      })\n    }\n    if(this.uiOptions.rightIcon){\n      elements[elements.length] = createIcon(this.uiOptions.rightIcon);\n    }\n    this.mainElement = createButton({\n      className:\"select-btn\"\n    },elements);\n  }\n\n  setSelectedItem(value:string){\n    this.selectedItem = find(this.select.getItems(),(item:UISelectItem) => {\n      return item.value == value;\n    });\n    if(!this.selectedItem){\n      this.txtSelected.textContent = this.emptyText;\n      this.selectedItem = null;\n      return;\n    }\n    this.txtSelected.textContent = this.selectedItem.name;\n    this.select.setSelectedItem(this.selectedItem.value);\n  }\n\n  resetSelection(){\n    this.select.resetSelection();\n    this.txtSelected.textContent = this.emptyText;\n  }\n\n  onItemSelected(value:string){\n    //this.txtSelected.textContent = value;\n    this.selectedItem = find(this.select.getItems(),(item:UISelectItem) => {\n      return item.value == value;\n    });\n    if(!this.selectedItem){\n      this.txtSelected.textContent = this.emptyText;\n      return;\n    }\n    this.txtSelected.textContent = this.selectedItem.name;\n  }\n\n\n\n}\n"]}