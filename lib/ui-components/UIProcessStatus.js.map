{"version":3,"file":"UIProcessStatus.js","sourceRoot":"","sources":["../../src/ui-components/UIProcessStatus.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAEX;;;;GAIG;AAGH,OAAO,EACL,UAAU,EACV,aAAa,EAQd,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EAAe,eAAe,EAAE,MAAM,8BAA8B,CAAA;AAG3E,MAAM,EAAC,eAAe,EAAE,sBAAsB,EAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAEtE,MAAM,sBAAuB,SAAQ,eAAe;IAKlD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAES,MAAM;QACd,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,KAAK,EAAC,EACtC,CAAC,CAAA;QAEF,IAAI,MAAM,GAAG,aAAa,CAAC,QAAQ,EAAC;YAClC,QAAQ,EAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YACnC,SAAS,EAAG,KAAK;SAClB,CAAC,CAAA;QACF,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAC;YAC7B,eAAe,CAAC,MAAM,sBAAsB,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAA;QAEF,IAAI,aAAa,GAAG,aAAa,CAAC,KAAK,EAAC;YACtC,QAAQ,EAAE;gBACR,IAAI,CAAC,WAAW,EAAE,MAAM;aACzB;SACF,CAAC,CAAA;QAEF,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;IACnC,CAAC;IAEM,IAAI;IAEX,CAAC;IAGM,OAAO;QACZ,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;CAEF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor\n} from '../element/index';\nimport { EventEmitter }  from 'events'\nimport { UIComponent, UIBaseComponent } from '../ui-components/UIComponent'\nimport { UISelect, UISelectItem, UISelectListener } from '../ui-components/UISelect'\n\nconst {allowUnsafeEval, allowUnsafeNewFunction} = require('loophole');\n\nexport class UIProcessStatus extends UIBaseComponent {\n\n  color:any;\n  chartCanvas:HTMLElement;\n\n  constructor(){\n    super();\n    this.initUI();\n  }\n\n  protected initUI(){\n    this.chartCanvas = createElement('div',{\n    })\n\n    let button = createElement('button',{\n      elements:[createText(\"Show Chart\")],\n      className : 'btn'\n    })\n    button.addEventListener('click',()=>{\n       allowUnsafeEval(() => allowUnsafeNewFunction(() => this.show()));\n    })\n\n    let mainContainer = createElement('div',{\n      elements: [\n        this.chartCanvas, button\n      ]\n    })\n\n    this.mainElement = mainContainer;\n  }\n\n  public show (){\n\n  }\n\n\n  public destroy(){\n    super.destroy();\n  }\n\n}\n"]}