{"version":3,"file":"UICollapsiblePane.js","sourceRoot":"","sources":["../../src/ui-components/UICollapsiblePane.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor,\n  createSelect,\n  createOption\n} from '../element/index';\n\nimport { UIComponent, UIBaseComponent } from '../ui-components/UIComponent'\nconst $ = require('jquery')\n\nexport interface UICollapsiblePaneItem {\n    id:string;\n    view:HTMLElement;\n    caption:string;\n    subtle?:string;\n    collapsed?:boolean;\n}\n\nexport class UICollapsiblePane extends UIBaseComponent {\n\n  protected listTreeEl:HTMLElement;\n  private items:Array<CollapsiblePaneElement>;\n\n  constructor(){\n    super();\n    this.initUI();\n  }\n\n  protected initUI(){\n    this.items = [];\n\n    this.listTreeEl = createElement('ul',{\n      className: 'list-tree has-collapsable-children'\n    })\n\n    let container = createElement('div',{\n        elements: [this.listTreeEl],\n        className: 'panel'\n    })\n    let mainContainer = createElement('div',{\n      elements: [container],\n      className: 'deprecation-cop'\n    })\n\n    this.mainElement = mainContainer;\n\n  }\n\n  public addItem(item:UICollapsiblePaneItem):UICollapsiblePane {\n    let newItem = new CollapsiblePaneElement(item);\n    this.items.push(newItem);\n    insertElement(this.listTreeEl, newItem.element())\n    return this;\n  }\n\n  public destroy(){\n    this.listTreeEl.remove();\n    super.destroy();\n    delete this.items;\n  }\n\n}\n\nclass CollapsiblePaneElement extends UIBaseComponent {\n  item:UICollapsiblePaneItem;\n  captionEl:HTMLElement;\n  subtleEl:HTMLElement;\n  listItemEl:HTMLElement;\n  ulViewContainerEl:HTMLElement;\n  liItem:HTMLElement;\n\n  constructor(item:UICollapsiblePaneItem){\n    super();\n    this.item = item;\n    this.initUI();\n  }\n\n  protected initUI(){\n    this.captionEl = createElement('span',{\n      elements : [ createText(this.item.caption)],\n      className : 'de-wb-collapsible-pane-item-caption-text'\n    })\n\n    let subtleText = '';\n    if (this.item.subtle){\n      subtleText = this.item.subtle;\n    }\n    this.subtleEl = createElement('span',{\n      elements : [ createText(subtleText)],\n      className : 'de-wb-collapsible-pane-item-caption-subtletext'\n    })\n\n    this.listItemEl = createElement('div',{\n        elements: [this.captionEl, this.subtleEl],\n        className : 'de-wb-collapsible-pane-item-caption list-item'\n    })\n\n    this.ulViewContainerEl = createElement('ul',{\n      elements: [\n          this.item.view\n      ],\n    })\n\n    this.liItem = createElement('li',{\n        elements: [\n            this.listItemEl,\n            this.ulViewContainerEl\n        ],\n        className: 'de-wb-collapsible-pane-item list-nested-item ' + (this.item.collapsed? 'collapsed' : '')\n    })\n    this.listItemEl.addEventListener('click',(evt)=>{\n      this.liItem.classList.toggle('collapsed')\n      this.item.collapsed = !this.item.collapsed;\n    })\n\n\n    this.mainElement = this.liItem;\n  }\n\n  public destroy(){\n    super.destroy()\n    $(this.listItemEl).off()\n    this.liItem.remove();\n  }\n\n}\n"]}