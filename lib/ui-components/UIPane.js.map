{"version":3,"file":"UIPane.js","sourceRoot":"","sources":["../../src/ui-components/UIPane.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { Logger } from '../logger/Logger'\n\nconst md5 = require('md5');\nconst $ = require('jquery')\n\nexport interface PaneViewOptions {\n  id:string;\n  title:string;\n  location?:string;\n  userData?:any;\n  activatePane:boolean;\n  searchAllPanes:boolean;\n  getURI:Function;\n  getTitle:Function;\n}\n\nexport class UIPane {\n\n  public static get PANE_URI_PREFIX():string { return \"deworkbench://\" }\n\n  private domEl:HTMLElement;\n  protected mainElement:HTMLElement;\n  protected item: any;\n  protected atomTextEditor: any;\n  private _options:PaneViewOptions;\n  private _events:EventEmitter;\n  private _uri:string;\n  private _el:HTMLElement;\n  private _title:string;\n\n  constructor(uri:string, title?:string){\n    Logger.consoleLog(\"UIPane for URI:\", uri);\n    this._uri = uri;\n    this._events = new EventEmitter()\n    // create the default container to retrun to the factory\n    this._el = createElement('div', {\n        elements: [\n        ],\n        className: 'de-workbench-pane-view'\n    });\n    this.domEl = this._el;\n    if (title){\n      this.setTitle(title);\n    }\n  }\n\n  /**\n   * called by the ViewManager after instatiation\n   */\n  public init(options:PaneViewOptions){\n    this._options = options;\n    // Tell to the subclass to create the main UI and attach it to this container\n    this.mainElement = this.createUI();\n    insertElement(this._el, this.mainElement);\n    Logger.consoleLog(\"UIPane initialized for \", this._options.id, {});\n    //Logger.consoleLog(\"UIPane parent is\", this.getAtomPane());\n  }\n\n  /**\n   * Implementation required into the subclass\n   **/\n  protected createUI():HTMLElement {\n      // you need to subclass and override this method\n      throw (\"Invalid implementation\")\n  }\n\n  public didOpen(){\n    //nop, overridable\n  }\n\n  public destroy(){\n    this.mainElement.remove();\n    this.domEl.remove();\n  }\n\n  public setTitle(title:string){\n    this._title = title;\n    this.updateTitleUI(title);\n    this.fireEvent('did-change-title', title)\n  }\n\n  public get paneId():string {\n    return this._options.id;\n  }\n\n  public get options():PaneViewOptions {\n    return this._options;\n  }\n\n  public static hashString(value:string):string {\n      return md5(value)\n  }\n\n  getTitle():string {\n    return this._title;\n  }\n\n  public get element():HTMLElement {\n    return this.domEl;\n  }\n\n  public getURI(){\n    return  this._uri;\n  }\n\n  protected fireEvent(event, ...params){\n    this._events.emit(event, params)\n  }\n\n  protected getAtomPane():any {\n    return $(this._el).parent().parent();\n  }\n\n  protected updateTitleUI(title:string){\n    try {\n      let tabTitleEl = this.getAtomPane().find('.tab-bar').find('.tab').find('.title');\n      tabTitleEl.html(title);\n    } catch (ex){\n      Logger.consoleLog(\"updateTitleUI error: \", ex);\n    }\n\n  }\n\n}\n"]}