{"version":3,"file":"UIButtonGroup.js","sourceRoot":"","sources":["../../src/ui-components/UIButtonGroup.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../element/index';\n\nimport { UIComponent, UIBaseComponent } from './UIComponent'\n\nexport enum UIButtonGroupMode {\n    Standard,\n    Toggle,\n    Radio\n}\n\nexport class UIButtonConfig {\n  public id: string;\n  public caption: string;\n  public selected: boolean = false;\n  public buttonType: string = '';\n  public clickListener: Function;\n  public className: string = '';\n  public setId(id:string):UIButtonConfig{\n    this.id = id;\n    return this;\n  }\n  public setCaption(caption:string):UIButtonConfig{\n    this.caption = caption;\n    return this;\n  }\n  public setSelected(selected:boolean):UIButtonConfig{\n    this.selected = selected;\n    return this;\n  }\n  public setButtonType(buttonType:string):UIButtonConfig{\n    this.buttonType = buttonType;\n    return this;\n  }\n  public setClassName(className:string):UIButtonConfig{\n    this.className = className;\n    return this;\n  }\n  public setClickListener(clickListener:Function):UIButtonConfig{\n    this.clickListener = clickListener;\n    return this;\n  }\n}\n\nexport class UIButtonGroup extends UIBaseComponent {\n\n  private buttonGroup:HTMLElement;\n  private toggleMode:UIButtonGroupMode;\n  private buttons:any;\n  private listeners:any;\n  private changeListeners:Array<Function>;\n\n  constructor(toggleMode:UIButtonGroupMode){\n    super();\n    this.toggleMode = toggleMode;\n    this.buildUI();\n  }\n\n  private buildUI(){\n    this.buttons = {};\n    this.listeners = {};\n    this.changeListeners = new Array();\n\n    this.buttonGroup = createElement('div',{\n      elements: [\n      ],\n      className : 'de-workbench-ui-togglebuttons btn-group'\n    })\n    this.mainElement = this.buttonGroup;\n  }\n\n  public addButton(buttonConfig:UIButtonConfig):UIButtonGroup {\n    let button = this.createButton(buttonConfig);\n    insertElement(this.buttonGroup, button);\n    this.buttons[buttonConfig.id] = { element: button, id: buttonConfig.id, caption: buttonConfig.caption };\n    return this;\n  }\n\n  /**\n   * Only for UIButtonGroupMode.Toggle\n   */\n  public toggleButton(id:string){\n    if (this.toggleMode==UIButtonGroupMode.Toggle) {\n      this.buttons[id].element.classList.toggle('selected');\n    }\n  }\n\n  /**\n   * Only for UIButtonGroupMode.Toggle and UIButtonGroupMode.Radio\n   */\n  public selectButton(id:string, select:boolean){\n    if (this.toggleMode==UIButtonGroupMode.Standard){\n      //nop\n    } else if (this.toggleMode==UIButtonGroupMode.Toggle){\n      if (select){\n        this.buttons[id].element.classList.add('selected');\n      } else {\n        this.buttons[id].element.classList.remove('selected');\n      }\n    } else if (this.toggleMode==UIButtonGroupMode.Radio){\n      let currentSelection:Array<string> = this.getSelectedButtons();\n      for (var i=0;i<currentSelection.length;i++){\n        this.buttons[currentSelection[i]].element.classList.remove('selected');\n      }\n      this.buttons[id].element.classList.add('selected');\n    }\n  }\n\n  /**\n   * Create a button component\n   */\n  private createButton(buttonConfig:UIButtonConfig):HTMLElement {\n    let className = \"btn platform-select\";\n    if (buttonConfig.buttonType){\n      className += \" btn-\" + buttonConfig.buttonType;\n    }\n    if (buttonConfig.className){\n      className += \" \" + buttonConfig.className;\n    }\n    let btn:HTMLElement = createElement('button',{\n      elements: [\n        createText(buttonConfig.caption)\n      ],\n      className: className\n    })\n\n    btn.setAttribute('btngroup-id',buttonConfig.id)\n\n    if (buttonConfig.selected){\n      btn.classList.add('selected');\n    }\n\n    let buttonClickListener = (evt)=>{\n      if (this.toggleMode==UIButtonGroupMode.Standard){\n        //nop\n      } else if (this.toggleMode==UIButtonGroupMode.Toggle) {\n        let el:any = evt.currentTarget;\n        el.classList.toggle('selected');\n      } else if (this.toggleMode==UIButtonGroupMode.Radio) {\n        let buttonEl:any = evt.currentTarget;\n        let buttonId = buttonEl.attributes['btngroup-id'].value;\n        this.selectButton(buttonId, true);\n      }\n\n      if (buttonConfig.clickListener){\n        buttonConfig.clickListener(buttonConfig.id);\n      }\n\n      for (var i=0;i<this.changeListeners.length;i++){\n        this.changeListeners[i](buttonConfig)\n      }\n    }\n\n    btn.addEventListener('click', buttonClickListener);\n\n    this.listeners[buttonConfig.id] = {\n      button: btn,\n      listener: buttonClickListener,\n    }\n\n    return btn;\n  }\n\n  public addChangeListener(listener:Function):UIButtonGroup{\n    this.changeListeners.push(listener)\n    return this\n  }\n\n  public getSelectedButtons():Array<string>{\n    let ret = new Array();\n    for (var key in this.buttons) {\n      if (this.buttons.hasOwnProperty(key)) {\n        let button = this.buttons[key];\n        if (button.element.classList.contains(\"selected\")){\n          ret.push(button.id);\n        }\n      }\n    }\n    return ret;\n  }\n\n  public destroy(){\n    for (var key in this.listeners) {\n      if (this.listeners.hasOwnProperty(key)) {\n        var btnInfo = this.listeners[key];\n        btnInfo.button.removeEventListener('click', btnInfo.listener);\n        btnInfo.button.remove();\n      }\n    }\n    this.listeners = {}\n    this.buttons = {}\n    super.destroy();\n  }\n\n}\n"]}