{"version":3,"file":"UISelect.js","sourceRoot":"","sources":["../../src/ui-components/UISelect.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor,\n  createSelect,\n  createOption\n} from '../element/index';\n\nimport { UIComponent, UIBaseComponent } from './UIComponent'\nimport * as _ from 'lodash'\n\nexport interface UISelectItem {\n  name:string,\n  value:string\n}\n\nexport interface UISelectListener {\n  onItemSelected(value:string)\n}\n\nexport class UISelect extends UIBaseComponent {\n  private items:Array<UISelectItem>\n  private listeners:Array<UISelectListener> = [];\n  constructor(items?:Array<UISelectItem>){\n    super();\n    this.items = items || [];\n    this.updateUI();\n  }\n  updateUI(){\n    let options:HTMLElement[]=this.createOptions(this.items);\n    if(!this.mainElement){\n      this.mainElement = createSelect(options);\n      this.mainElement.addEventListener('change',this.onChange.bind(this),false);\n    }else{\n      let el:Node;\n      while((el = this.mainElement.firstChild) != null){\n        this.mainElement.removeChild(el);\n      }\n      options.forEach((item) => {\n        this.mainElement.appendChild(item);\n      });\n    }\n  }\n\n  onChange(evt:any){\n    _.forEach(this.listeners,(single:UISelectListener) => {\n      single.onItemSelected(this.mainElement['value'])\n    });\n  }\n\n  getItems(){\n    return this.items;\n  }\n\n  setItems(items:Array<UISelectItem>){\n    this.items = items;\n    this.updateUI();\n  }\n\n  addSelectListener(listener:UISelectListener){\n    this.listeners.push(listener);\n  }\n\n  removeSelectListener(listener:UISelectListener){\n    this.listeners = _.remove(this.listeners,function(item){\n      return item == listener;\n    });\n  }\n\n  createOptions(items:Array<UISelectItem>):HTMLElement[]{\n    let options=[];\n    items.forEach((item:UISelectItem) => {\n      options.push(createOption(item.name,item.value));\n    });\n    return options;\n  }\n\n  setSelectedItem(value:string){\n    this.mainElement['value'] = value;\n  }\n\n  getSelectedItem():string{\n    return this.mainElement['value'];\n  }\n\n  resetSelection(){\n    this.mainElement['selectedIndex'] = -1;\n  }\n\n  setEnable(value:boolean){\n    if(!value){\n      this.mainElement.setAttribute('disabled','true');\n    }else{\n      this.mainElement.removeAttribute('disabled');\n    }\n  }\n\n}\n"]}