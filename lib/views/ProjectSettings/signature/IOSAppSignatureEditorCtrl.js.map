{"version":3,"file":"IOSAppSignatureEditorCtrl.js","sourceRoot":"","sources":["../../../../src/views/ProjectSettings/signature/IOSAppSignatureEditorCtrl.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n import {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor\n } from '../../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { Logger } from '../../../logger/Logger'\nimport { UIComponent, UIBaseComponent } from '../../../ui-components/UIComponent'\nimport { UISelect, UISelectItem, UISelectListener } from '../../../ui-components/UISelect'\nimport { UIInputFormElement, UISelectFormElement } from '../../../ui-components/UIInputFormElement'\nimport { AbstractAppSignatureEditorCtrl, AppType } from './AbstractAppSignatureEditorCtrl'\nimport { IOSUtilities } from '../../../cordova/IOSUtilities'\n\nconst _  = require('lodash')\n\nexport class IOSAppSignatureEditorCtrl extends AbstractAppSignatureEditorCtrl {\n\n  private provisioningProfileSelect:UISelectFormElement;\n  private packageTypeSelect:UISelectFormElement;\n  private devTeamInput:UIInputFormElement;\n  private codeSignIdentityInput:UIInputFormElement;\n  private provisioningProfiles:any;\n\n  constructor(appType:AppType){\n    super(appType);\n  }\n\n  protected createControls():Array<HTMLElement> {\n    this.devTeamInput = new UIInputFormElement().setCaption('Development Team').setPlaceholder('Development Team').addEventListener('change',(evtCtrl:UIInputFormElement)=>{\n    })\n    this.codeSignIdentityInput = new UIInputFormElement().setCaption('Code Sign Identity').setPlaceholder('Code Sign Identity').addEventListener('change',(evtCtrl:UIInputFormElement)=>{\n    })\n    this.provisioningProfileSelect = new UISelectFormElement().setCaption('Provisioning Profile');\n    this.packageTypeSelect = new UISelectFormElement().setCaption('Package Type');\n    this.packageTypeSelect.setItems(this.getPackageTypeItems());\n\n    return [this.provisioningProfileSelect.element(), this.devTeamInput.element(), this.codeSignIdentityInput.element(), this.packageTypeSelect.element()];\n  }\n\n  protected getPackageTypeItems():Array<UISelectItem>{\n    return [\n        { value: \"developement\",\n          name: \"Developement\"\n        },\n        { value: \"adhoc\",\n          name: \"Ad-Hoc\"\n        },\n        { value: \"enterprise\",\n          name: \"Enterprise\"\n        },\n        { value: \"appstore\",\n          name: \"AppStore\"\n        }\n    ]\n  }\n\n  public destroy(){\n    this.provisioningProfileSelect.destroy();\n    this.packageTypeSelect.destroy();\n    this.devTeamInput.destroy();\n    this.codeSignIdentityInput.destroy();\n    super.destroy();\n  }\n\n  public reloadProvisioningProfiles(provisioningProfiles:any){\n    // save the current value\n    let currentProvisioningSelected = this.provisioningProfileSelect.getValue();\n\n    this.provisioningProfiles = provisioningProfiles;\n    let items = this.createItems(provisioningProfiles)\n    this.provisioningProfileSelect.setItems(items);\n\n    // after the new values probably the selection is changed\n    this.refreshProvisioningSelected(currentProvisioningSelected)\n  }\n\n  protected refreshProvisioningSelected(toSelect:string){\n    if (toSelect){\n      this.provisioningProfileSelect.setValue(toSelect)\n    } else {\n      // get saved\n      let json = this.getBuildJsonsection('ios');\n      if (json){\n        this.provisioningProfileSelect.setValue(json.provisioningProfile)\n      }\n    }\n  }\n\n  protected createItems(provisioningProfiles:any):Array<UISelectItem> {\n    return _.map(provisioningProfiles, (item)=>{\n        return {\n          name: item.appId,\n          value: item.appIdentifier\n        }\n    })\n  }\n\n  public updateUI(buildJson:any){\n    let json = this.getBuildJsonsection('ios');\n    if (json){\n      this.provisioningProfileSelect.setValue(json.provisioningProfile)\n      this.codeSignIdentityInput.setValue(json.codeSignIdentity)\n      this.devTeamInput.setValue(json.developmentTeam)\n      this.packageTypeSelect.setValue(json.packageType)\n    }\n  }\n\n  public saveChanges(){\n    let json = this.getBuildJsonsection('ios');\n    if (json){\n      json.provisioningProfile = this.provisioningProfileSelect.getValue()\n      json.codeSignIdentity = this.codeSignIdentityInput.getValue()\n      json.developmentTeam = this.devTeamInput.getValue()\n      json.packageType = this.packageTypeSelect.getValue()\n    }\n  }\n\n  public async reload(){\n    this.updateUI(this.buildJson);\n  }\n\n\n}\n"]}