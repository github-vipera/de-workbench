{"version":3,"file":"ProjectSettingsView.js","sourceRoot":"","sources":["../../../src/views/ProjectSettings/ProjectSettingsView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../cordova/Cordova'\nimport { UIListView, UIListViewModel } from '../../ui-components/UIListView'\nimport { Logger } from '../../logger/Logger'\nimport { UITabbedView, UITabbedViewItem, UITabbedViewTabType } from '../../ui-components/UITabbedView'\nimport { InstalledPluginsView } from './plugins/InstalledPluginsView'\nimport { InstallNewPluginsView } from './plugins/InstallNewPluginsView'\nimport { VariantsView } from './variants/VariantsView'\nimport { AppSignatureView } from './signature/AppSignatureView'\nimport { GeneralSettingsView } from './GeneralSettingsView'\nimport { UIPane } from '../../ui-components/UIPane'\n\nconst crypto = require('crypto');\n\nexport class ProjectSettingsView extends UIPane {\n\n  private projectRoot: string;\n  private projectId: string;\n  private tabbedView: UITabbedView;\n\n  // Sub views\n  private installedPluginsView: InstalledPluginsView;\n  private installNewPluginsView: InstallNewPluginsView;\n  private variantsView: VariantsView;\n  private appSignatureView: AppSignatureView;\n  private generalSettingsView: GeneralSettingsView;\n\n  constructor(params:any){\n    super(params)\n    Logger.getInstance().debug(\"PushToolsView creating for \",this.paneId);\n\n  }\n\n  private reloadProjectSettings(){\n  }\n\n  protected  createUI():HTMLElement{\n    Logger.getInstance().debug(\"ProjectSettingsView initUI called.\");\n\n    // create the single views\n    this.installedPluginsView = new InstalledPluginsView();\n    this.installNewPluginsView = new InstallNewPluginsView();\n    this.variantsView = new VariantsView();\n    this.appSignatureView = new AppSignatureView();\n    this.generalSettingsView = new GeneralSettingsView();\n\n    // Create the main UI\n    let element = document.createElement('de-workbench-project-settings')\n\n    this.tabbedView = new UITabbedView();//.setTabType(UITabbedViewTabType.Horizontal);\n    this.tabbedView.addView(new UITabbedViewItem('general',           'General',              this.generalSettingsView.element()).setTitleClass('icon icon-settings'));\n    this.tabbedView.addView(new UITabbedViewItem('installed_plugins', 'Installed Plugins',    this.installedPluginsView.element()).setTitleClass('icon icon-plug'));\n    this.tabbedView.addView(new UITabbedViewItem('install_plugins',   'Install New Plugins',  this.installNewPluginsView.element()).setTitleClass('icon icon-puzzle'));\n    this.tabbedView.addView(new UITabbedViewItem('variants',          'Build Variants',       this.variantsView.element()).setTitleClass('icon icon-versions'));\n    this.tabbedView.addView(new UITabbedViewItem('app_signature',     'App Signature',        this.appSignatureView.element()).setTitleClass('icon icon-shield'));\n\n    let el = createElement('div', {\n        elements: [\n          this.tabbedView.element()\n        ],\n        className: 'de-workbench-project-settings-view'\n    });\n    insertElement(element, el)\n\n    return element;\n  }\n\n\n  public destroy(){\n    this.generalSettingsView.destroy();\n    this.installedPluginsView.destroy();\n    this.installNewPluginsView.destroy();\n    this.variantsView.destroy();\n    this.appSignatureView.destroy();\n    this.tabbedView.destroy();\n    this.element.remove();\n  }\n\n}\n"]}