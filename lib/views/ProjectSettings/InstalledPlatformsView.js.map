{"version":3,"file":"InstalledPlatformsView.js","sourceRoot":"","sources":["../../../src/views/ProjectSettings/InstalledPlatformsView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../cordova/Cordova'\nimport { Logger } from '../../logger/Logger'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { UIListView, UIListViewModel } from '../../ui-components/UIListView'\nimport * as _ from 'lodash'\nimport { UIButtonMenu } from '../../ui-components/UIButtonMenu'\nimport { UINotifications } from '../../ui-components/UINotifications'\nimport { UILineLoader } from '../../ui-components/UILineLoader'\n\nexport class InstalledPlatformsView extends UIBaseComponent {\n\n  private mainFormElement:HTMLElement;\n  private installedPlatformList: UIListView;\n  private installedPlatformListModel : InstalledPlatformListModel;\n  private currentProjectPath:string;\n  private btnInstallNewPlatform: UIButtonMenu;\n  private lineLoader: UILineLoader;\n\n  constructor(){\n    super();\n    this.buildUI();\n  }\n\n  private buildUI(){\n    this.lineLoader = new UILineLoader()\n\n    this.currentProjectPath = ProjectManager.getInstance().getCurrentProjectPath();\n\n    // ============================================================================\n    // Installed platform list\n    this.installedPlatformListModel = new InstalledPlatformListModel(this.currentProjectPath)\n                                      .setActionListener(this.doAction.bind(this));\n    this.installedPlatformList = new UIListView(this.installedPlatformListModel);\n    var listCtrl = this.createListControlBlock(\"\", this.installedPlatformList, this.lineLoader)\n    // ============================================================================\n\n\n    // ============================================================================\n    // Install new platform button\n    this.btnInstallNewPlatform = new UIButtonMenu()\n                                      .setCaption('Install New Platform...')\n                                      .setInfoMessage('Select a new Platform to install')\n                                      .setEmptyMessage('  NOTE: No other platforms are available to install')\n                                      .setOnSelectionListener((menuItem)=>{\n                                        const selected = atom.confirm({\n                                            message: 'Install New Platform',\n                                            detailedMessage: 'Do you want to confirm the ' + menuItem.displayName +' platform installation ?',\n                                            buttons: ['Yes, Install it', 'Cancel']\n                                          });\n                                          if (selected==0){\n                                            this.doInstallPlatform(menuItem.value);\n                                          }\n                                      })\n    let installNewPatformCtrl = createElement('div',{\n      elements: [\n        this.btnInstallNewPlatform.element()\n      ],\n      className: 'install-platform-ctrl'\n    })\n    // ============================================================================\n\n\n\n    this.mainFormElement = createElement('form',{\n      elements: [\n        listCtrl,\n        installNewPatformCtrl\n      ],\n      className: 'de-workbench-appinfo-form installed-platforms-form'\n    });\n    this.mainFormElement.setAttribute(\"tabindex\", \"-1\")\n    this.mainElement = this.mainFormElement;\n\n    this.reload();\n  }\n\n  doAction(platformInfo:CordovaPlatform, action:number){\n    if (action===0){\n      const selected = atom.confirm({\n          message: 'Uninstall Platform',\n          detailedMessage: \"Are you sure you want to uninstall the \" + PlatformUtils.toPlatformDisplayName(platformInfo.name) +\" platform ?\",\n          buttons: ['Yes, Remove It', 'Cancel']\n        });\n        if (selected==0){\n          this.doUninstallPlatform(platformInfo.name)\n        }\n    }\n  }\n\n  doUninstallPlatform(platformName:string){\n    this.lineLoader.setOnLoading(true)\n    ProjectManager.getInstance().cordova.removePlatform(this.currentProjectPath, platformName).then(()=>{\n      UINotifications.showInfo(\"Platform \"+ PlatformUtils.toPlatformDisplayName(platformName) +\" uninstalled successfully.\")\n      this.reload()\n      this.lineLoader.setOnLoading(false)\n    }).catch((err)=>{\n      UINotifications.showError(\"Error unistalling Platform \"+ PlatformUtils.toPlatformDisplayName(platformName) +\". See the logs for more details.\")\n      this.lineLoader.setOnLoading(false)\n    })\n  }\n\n  doInstallPlatform(platformName:string){\n    this.lineLoader.setOnLoading(true)\n    ProjectManager.getInstance().cordova.addPlatform(this.currentProjectPath, platformName).then(()=>{\n      UINotifications.showInfo(\"Platform \"+ PlatformUtils.toPlatformDisplayName(platformName) +\" installed successfully.\")\n      this.reload()\n      this.lineLoader.setOnLoading(false)\n    }).catch((err)=>{\n      UINotifications.showError(\"Error adding Platform \"+ PlatformUtils.toPlatformDisplayName(platformName) +\". See the logs for more details.\")\n      this.lineLoader.setOnLoading(false)\n    })\n  }\n\n  updateAvailableToInstallPlatforms(){\n    // change available to install platforms\n    var platforms = this.installedPlatformListModel.getCurrentPlatforms();\n\n    var availableToInstall = [ {value:'ios', displayName:'iOS'},\n                      {value:'android', displayName: 'Android'},\n                      {value:'browser', displayName: 'Browser'}];\n\n    // remove from list the already installed platforms\n    for (var i=0;i<platforms.length;i++){\n      _.remove(availableToInstall, {\n          value: platforms[i].name\n      });\n    }\n\n    this.btnInstallNewPlatform.setMenuItems(availableToInstall);\n  }\n\n  public reload(){\n    this.lineLoader.setOnLoading(true)\n    this.installedPlatformListModel.reload(()=>{\n      this.updateAvailableToInstallPlatforms();\n      //this.installedPlatformList.modelChanged();\n      this.lineLoader.setOnLoading(false)\n    })\n  }\n\n  createListControlBlock(caption:string, control:UIListView, loader:UILineLoader):HTMLElement{\n    var label = createElement('label', {\n      elements: [\n        createText(caption)\n      ]\n    })\n\n    var blockElement = createElement('div',{\n      elements: [\n        label,\n        control.element(),\n        loader.element()\n      ],\n      className: 'block control-group'\n    })\n    return blockElement;\n  }\n\n}\n\nclass InstalledPlatformListModel implements UIListViewModel {\n\n  private projectPath:string;\n  private platforms:Array<CordovaPlatform>;\n  private platformElements:any;\n  private actionListener:Function;\n  private events:EventEmitter;\n\n  constructor(projectPath:string){\n    this.events = new EventEmitter();\n    this.projectPath = projectPath;\n  }\n\n  hasHeader():boolean {\n      return false;\n  }\n\n  getRowCount():number {\n    if (this.platforms){\n      return this.platforms.length;\n    } else {\n      return 0;\n    }\n  }\n\n  getColCount():number {\n    return 1;\n  }\n\n  getElementAt?(row:number, col:number):HTMLElement {\n    return this.getRenderer(row).element();\n  }\n\n  getValueAt(row:number, col:number):any {\n      return this.platforms[row].name;\n  }\n\n  getClassNameAt(row:number, col:number):string {\n    return \"\";\n  }\n\n  getColumnName(col:number):string {\n    return \"\";\n  }\n\n  getClassName():string {\n    return \"installed-platform-list\";\n  }\n\n  setActionListener(actionListener:Function):InstalledPlatformListModel{\n    this.actionListener = actionListener;\n    return this;\n  }\n\n  private getRenderer(row:number):PlatformRenderer {\n      if (this.platformElements[\"\"+row]){\n        return this.platformElements[\"\"+row];\n      } else {\n        var renderer = this.createRenderer(row);\n        this.platformElements[\"\"+row] = renderer;\n        return renderer;\n      }\n  }\n\n  private createRenderer(row:number):PlatformRenderer {\n    var platformInfo:CordovaPlatform = this.platforms[row];\n    var ret = new PlatformRenderer(platformInfo, this.onItemAction.bind(this));\n    return ret;\n  }\n\n  public reload(didDone:Function){\n    ProjectManager.getInstance().cordova.getInstalledPlatforms(this.projectPath).then((ret)=>{\n      this.platforms = ret;\n      this.platformElements = {};\n      this.fireModelChanged()\n      didDone();\n    });\n  }\n\n  public getCurrentPlatforms():Array<CordovaPlatform>{\n      return this.platforms;\n  }\n\n  onItemAction(platformInfo:CordovaPlatform, action:number){\n    if (this.actionListener){\n      this.actionListener(platformInfo, action)\n    }\n  }\n\n  protected fireModelChanged(){\n    this.events.emit('didModelChanged')\n  }\n\n  addEventListener(event:string, listener){\n    this.events.addListener(event, listener)\n  }\n\n  removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  destroy(){\n    this.events.removeAllListeners();\n    Object.keys(this.platformElements).forEach((key) => {\n      let renderer:PlatformRenderer = this.platformElements[key]\n      renderer.destroy();\n    });\n    this.platforms = null;\n    this.platformElements = null;\n    this.events = null;\n  }\n\n}\n\nclass PlatformRenderer extends UIBaseComponent {\n\n  private platformInfo:CordovaPlatform;\n  private itemActionListener:Function;\n\n  constructor(platformInfo:CordovaPlatform, itemActionListener:Function){\n    super();\n    this.itemActionListener = itemActionListener;\n    this.platformInfo = platformInfo;\n    this.buildUI();\n  }\n\n  private buildUI(){\n    var iconDiv = createIcon(this.platformInfo.name)\n    iconDiv.classList.add(\"platform-icon\")\n\n    var platformNameDiv = createElement('div',{\n          elements: [\n            createText(PlatformUtils.toPlatformDisplayName(this.platformInfo.name))\n          ],\n          className: 'platform-name'\n    })\n\n    var platformVersionDiv = createElement('div',{\n          elements: [\n            createText(this.platformInfo.version)\n          ],\n          className: 'platform-version'\n    })\n\n    let btnManualInstall:HTMLElement = createElement('button',{\n          elements: [\n            createText(\"Remove\")\n          ],\n          className: 'btn inline-block-tigh btn-uninstall-platform'\n        })\n      btnManualInstall.addEventListener('click',(evt)=>{\n        if (this.itemActionListener){\n          this.itemActionListener(this.platformInfo,0)\n        }\n      });\n\n    this.mainElement = createElement('div',{\n        elements: [\n          iconDiv,\n          platformNameDiv,\n          platformVersionDiv,\n          btnManualInstall\n        ],\n        className : 'platform-renderer'\n      }\n    )\n\n  }\n\n  public destroy(){\n    super.destroy()\n  }\n}\n\nclass PlatformUtils {\n  public static toPlatformDisplayName(platformName:string){\n    if (platformName==='ios'){\n      return \"iOS\";\n    }\n    else if (platformName==='android'){\n      return \"Android\";\n    }\n    else if (platformName==='browser'){\n      return \"Browser\";\n    }\n  }\n}\n"]}