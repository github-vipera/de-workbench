{"version":3,"file":"ProvidedPluginsView.js","sourceRoot":"","sources":["../../../../src/views/ProjectSettings/plugins/ProvidedPluginsView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor,\n   createButtonSpacer\n } from '../../../element/index';\n\nconst _ = require(\"lodash\");\nconst $ = require ('JQuery');\n\nimport { ProjectManager } from '../../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../../cordova/Cordova'\nimport { Logger } from '../../../logger/Logger'\nimport { UIPluginsList, UIPluginMetaButtons } from '../../../ui-components/UIPluginsList'\nimport { UITabbedView, UITabbedViewItem, UITabbedViewTabType } from '../../../ui-components/UITabbedView'\nimport { UIComponent, UIBaseComponent } from '../../../ui-components/UIComponent'\nimport { UILineLoader } from '../../../ui-components/UILineLoader'\nimport { UINotifications } from '../../../ui-components/UINotifications'\nimport { EventBus } from '../../../DEWorkbench/EventBus'\nimport { CordovaPluginsProviderService } from '../../../DEWorkbench/services/CordovaPluginsProvidersManager'\n\nexport class ProvidedPluginsView extends UIBaseComponent {\n\n  private pluginList: UIPluginsList;\n  private lineLoader:UILineLoader;\n  private currentProjectRoot:string;\n  private pluginsProvider:CordovaPluginsProviderService;\n  private extendedUIContainer: HTMLElement;\n\n  constructor(){\n    super();\n\n    this.currentProjectRoot = ProjectManager.getInstance().getCurrentProjectPath();\n\n    this.initUI();\n\n  }\n\n  protected initUI(){\n\n    // Subscribe interesting events\n    EventBus.getInstance().subscribe(EventBus.EVT_PLUGIN_ADDED, (eventData)=>{\n      // the first item in eventData is the project root\n      if (eventData[0]===this.currentProjectRoot){\n        //TODO!! check for installed\n      }\n    });\n    EventBus.getInstance().subscribe(EventBus.EVT_PLUGIN_REMOVED, (eventData)=>{\n      // the first item in eventData is the project root\n      if (eventData[0]===this.currentProjectRoot){\n        //TODO!! check for installed\n      }\n    });\n    // end event bus subscription\n\n    this.lineLoader = new UILineLoader()\n\n    // Plugins list\n    this.pluginList = new UIPluginsList().addEventListener('didActionRequired',(plugininfo, actionType)=>{\n      if (actionType===UIPluginMetaButtons.BTN_TYPE_INSTALL){\n        this.doInstallPlugin(plugininfo)\n      }\n      else if (actionType===UIPluginMetaButtons.BTN_TYPE_UNINSTALL){\n        this.doUninstallPlugin(plugininfo)\n      } else {\n        Logger.getInstance().warn(\"Action unknwon \" + actionType);\n      }\n    });\n\n\n    this.extendedUIContainer = createElement('div',{\n      className:'de-workbench-provided-plugins-extui-container'\n    });\n\n    // Main element\n    this.mainElement = createElement('div',{\n        elements : [  this.extendedUIContainer, this.pluginList.element(), this.lineLoader.element() ],\n        className: 'de-workbench-community-plugins-list'\n    })\n\n    this.showProgress(false);\n\n  }\n\n  private doInstallPlugin(pluginInfo){\n    this.showProgress(true)\n    this.pluginList.setPluginInstallPending(pluginInfo, true);\n    ProjectManager.getInstance().cordova.addPlugin(this.currentProjectRoot, pluginInfo).then(()=>{\n      UINotifications.showInfo(\"Plugin \"+pluginInfo.name +\" installed successfully.\")\n      this.showProgress(false)\n      this.pluginList.setPluginInstallPending(pluginInfo, false);\n    }).catch(()=>{\n      UINotifications.showError(\"Error installing plugin \"+pluginInfo.name +\". See the log for more details.\")\n      this.showProgress(false)\n      this.pluginList.setPluginInstallPending(pluginInfo, false);\n    })\n  }\n\n  private doUninstallPlugin(pluginInfo){\n    this.showProgress(true)\n    this.pluginList.setPluginUInstallPending(pluginInfo, true);\n    ProjectManager.getInstance().cordova.removePlugin(this.currentProjectRoot, pluginInfo).then(()=>{\n      UINotifications.showInfo(\"Plugin \"+pluginInfo.name +\" uninstalled successfully.\")\n      this.showProgress(false)\n      this.pluginList.setPluginUInstallPending(pluginInfo, false);\n    }).catch(()=>{\n      UINotifications.showError(\"Error uninstalling plugin \"+pluginInfo.name +\". See the log for more details.\")\n      this.showProgress(false)\n      this.pluginList.setPluginUInstallPending(pluginInfo, false);\n    })\n  }\n\n  private markInstalledPlugins(pluginList:Array<CordovaPlugin>, installedPlugins:Array<CordovaPlugin>):Array<CordovaPlugin>{\n      for (var i=0;i<installedPlugins.length;i++){\n        let index = _.findIndex(pluginList, { 'name' : installedPlugins[i].name })\n        if (index>-1){\n          pluginList[index].installed = true\n        }\n      }\n      return pluginList;\n  }\n\n  /*\n   * Show/Hide progress bar\n   */\n  private showProgress(show:boolean){\n    this.lineLoader.setOnLoading(show);\n  }\n\n  public destroy(){\n    this.pluginList.destroy()\n    super.destroy()\n  }\n\n  public setPluginsProvider(provider:CordovaPluginsProviderService):ProvidedPluginsView {\n    this.pluginsProvider = provider;\n    this.pluginsProvider.addEventHandler((event)=>{\n      if (event && event.type && event.type ==='listChanged'){\n        this.reloadPluginList();\n      }\n    })\n\n    if (this.pluginsProvider.getExtendedUI){\n        let extendedUIElement = this.pluginsProvider.getExtendedUI();\n        if (extendedUIElement){\n          insertElement(this.extendedUIContainer, extendedUIElement)\n        }\n    }\n\n\n    return this;\n  }\n\n  public reloadPluginList():ProvidedPluginsView{\n    try {\n      this.pluginsProvider.getCordovaPlugins().then((providedPluginsList)=>{\n        this.pluginList.setPlugins(providedPluginsList);\n      });\n      return this;\n    } catch(ex){\n      Logger.getInstance().error(\"Error loading plugins list from provider \"+ this.pluginsProvider +\": \" + ex,ex)\n      console.error(\"Error loading plugins list from provider \"+ this.pluginsProvider +\": \" + ex,ex)\n    }\n  }\n\n}\n"]}