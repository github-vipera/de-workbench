{"version":3,"file":"VariantsGridCtrl.js","sourceRoot":"","sources":["../../../../src/views/ProjectSettings/variants/VariantsGridCtrl.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n* Dynamic Engine Workbench\n* Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n* MIT Licensed\n*/\n\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor\n} from '../../../element/index';\n\nimport { UIExtendedListView, UIExtendedListViewModel, UIExtendedListViewValidationResult } from '../../../ui-components/UIExtendedListView'\nimport { UIComponent, UIBaseComponent } from '../../../ui-components/UIComponent'\nimport { UITreeViewModel, UITreeViewSelectListener, UITreeView, UITreeItem, findItemInTreeModel } from '../../../ui-components/UITreeView'\nimport { UIButtonGroupMode, UIButtonConfig, UIButtonGroup } from '../../../ui-components/UIButtonGroup'\nimport { EventEmitter }  from 'events'\nimport { VariantsManager, VariantsModel, Variant, VariantPlatform, VariantPreference } from '../../../DEWorkbench/VariantsManager'\n\nexport class VariantsGridCtrl extends UIBaseComponent {\n\n  protected treeModel:VariantTreeModel;\n  protected treeView:UITreeView;\n  protected events:EventEmitter;\n  protected variant:Variant;\n\n  constructor(variant:Variant){\n    super();\n    this.variant = variant;\n    this.events = new EventEmitter()\n    this.initUI();\n  }\n\n  protected initUI(){\n    this.treeModel = this.createTreeModel();\n    this.treeView = new UITreeView(this.treeModel)\n    this.mainElement = this.treeView.element()\n    this.mainElement.classList.add(\"de-workbench-variants-treeview\")\n\n    this.treeModel.addEventListener('didModelChanged',()=>{\n      this.events.emit('didDataChanged', this)\n      //Logger.consoleLog(\"Variant data changed! \", this.variant)\n    })\n  }\n\n  protected createTreeModel():VariantTreeModel {\n\n    let globalPropertiesNode = new VariantsPlatformTreeItem('global', 'Global Properties', this.variant)\n    let androidPropertiesNode = new VariantsPlatformTreeItem('android', 'Android Properties', this.variant)\n    let iosPropertiesNode = new VariantsPlatformTreeItem('ios', 'iOS Properties', this.variant)\n    let browserPropertiesNode = new VariantsPlatformTreeItem('browser', 'Browser Properties', this.variant)\n\n    let rootNode = new VariantsTreeItem('_root', 'Configuration Properties', this.variant)\n                        .setChildren([globalPropertiesNode,androidPropertiesNode,iosPropertiesNode,browserPropertiesNode])\n\n    let newModel:VariantTreeModel = new VariantTreeModel(this.variant).setRoot(rootNode);\n    return newModel;\n  }\n\n  public addEventListener(event:string,listener):VariantsGridCtrl {\n      this.events.addListener(event, listener);\n      return this;\n  }\n\n  public removeEventListener(event:string,listener):VariantsGridCtrl {\n    this.events.removeListener(event, listener);\n    return this;\n  }\n\n  public destroy(){\n    super.destroy();\n    this.events.removeAllListeners();\n    this.treeView.destroy();\n    this.treeModel.destroy();\n    this.treeView = null;\n    this.treeModel = null;\n    this.events = null;\n  }\n\n}\n\nexport class VariantTreeModel implements UITreeViewModel {\n\n  root:VariantsTreeItem;\n  events:EventEmitter;\n  className?:string;\n  protected variant:Variant;\n\n  constructor(variant:Variant){\n    this.variant = variant;\n  }\n\n  public setRoot(root:VariantsTreeItem):VariantTreeModel {\n    this.root = root;\n    this.subscribeForItemEvents(root);\n    this.events = new EventEmitter();\n    return this;\n  }\n\n  protected subscribeForItemEvents(treeItem:VariantsTreeItem){\n    treeItem.addEventListener('didItemChanged',()=>{\n      this.fireModelChanged();\n    })\n    if (treeItem.children){\n      for (var i=0;i<treeItem.children.length;i++){\n          this.subscribeForItemEvents(treeItem.children[i])\n      }\n    }\n  }\n\n  getItemById(id:string):VariantsTreeItem {\n    return findItemInTreeModel(id, this)\n  } // optional, if provided, listeners receive both id and item of selection\n\n  addEventListener(event:string, listener){\n    this.events.addListener(event, listener)\n  }\n\n  removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  protected fireModelChanged(){\n    this.events.emit(\"didModelChanged\")\n  }\n\n  destroy(){\n    this.events.removeAllListeners();\n    this.root.destroy();\n    this.root = null;\n    this.events = null;\n  }\n\n}\n\nexport class VariantsTreeItem implements UITreeItem {\n\n  public id:string;\n  public name:string;\n  public children:Array<VariantsTreeItem>;\n  public htmlElement:HTMLElement=undefined;\n  public expanded:boolean=true;\n  protected events:EventEmitter;\n  protected variant:Variant;\n\n  constructor(id:string, name:string, variant:Variant){\n    this.variant = variant;\n    this.id = id;\n    this.name = name;\n    this.events = new EventEmitter();\n  }\n\n  public setChildren(children:Array<VariantsTreeItem>):VariantsTreeItem {\n    this.children = children;\n    return this;\n  }\n\n  protected fireItemChanged(){\n    this.events.emit(\"didItemChanged\")\n  }\n\n  public addEventListener(event:string, listener){\n    this.events.addListener(event, listener)\n  }\n\n  public removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  public destroy(){\n    for (var i=0;i<this.children.length;i++){\n      this.children[i].destroy();\n    }\n    this.children = undefined;\n  }\n\n\n}\n\nexport class VariantsPlatformTreeItem extends VariantsTreeItem {\n\n  //protected properties: Array<any>;\n  private propertyRenderer:VariantsPropertyRenderer;\n  private platformName:string;\n\n  constructor(platformName:string, displayName:string, variant:Variant){\n    super(platformName,displayName, variant);\n    this.platformName = platformName;\n    this.createChildrenForProperties()\n  }\n\n  protected createChildrenForProperties(){\n    this.propertyRenderer = new VariantsPropertyRenderer(this.platformName, this.variant);\n    this.propertyRenderer.addEventListener('didDataChanged',()=>{\n      this.fireItemChanged()\n    })\n    let propertyListChild = new VariantsTreeItem(this.id + \"_properties\", this.id + \"_properties\", this.variant);\n    propertyListChild.htmlElement = this.propertyRenderer.element()\n    this.children = [propertyListChild]\n  }\n\n\n  public destroy(){\n    this.events.removeAllListeners()\n    this.propertyRenderer.destroy();\n    this.events = null;\n    super.destroy();\n  }\n\n\n}\n\nclass VariantsPropertyRenderer extends UIBaseComponent {\n\n  protected listView:UIExtendedListView;\n  protected model:VariantsPlatformListViewModel;\n  protected toolbar:HTMLElement;\n  protected events:EventEmitter;\n  protected variant:Variant;\n  protected platformName:string;\n\n  constructor(platformName:string,variant:Variant){\n    super();\n    this.variant = variant;\n    this.platformName = platformName;\n    this.events = new EventEmitter();\n    this.initUI();\n  }\n\n  protected initUI() {\n    let buttonGroup = new UIButtonGroup(UIButtonGroupMode.Standard);\n    buttonGroup.addButton(new UIButtonConfig()\n                            .setId('add')\n                            .setCaption(\"+\")\n                            .setClickListener(()=>{\n                                this.addNewRow()\n                             }))\n    buttonGroup.addButton(new UIButtonConfig()\n                            .setId('add')\n                            .setCaption(\"-\")\n                            .setClickListener(()=>{\n                                this.removeSelectedRow()\n                             }))\n    buttonGroup.element().classList.add('btn-group-xs')\n    this.toolbar = createElement('div',{\n      elements : [\n        buttonGroup.element()\n      ],\n      className: 'de-workbench-variants-ctrl-toolbar'\n    })\n    this.model = new VariantsPlatformListViewModel(this.platformName, this.variant)\n      .addEventListener('didModelChanged',()=>{\n        this.fireDataChanged();\n      });\n    this.listView = new UIExtendedListView(this.model)\n    this.mainElement = createElement('div', {\n      elements: [ this.toolbar, this.listView.element() ],\n      className: 'de-workbench-variants-ctrl-prop-renderer'\n    })\n  }\n\n  public addEventListener(event:string, listener){\n    this.events.addListener(event, listener)\n  }\n\n  public removeEventListener(event:string, listener){\n    this.events.removeListener(event, listener)\n  }\n\n  protected addNewRow(){\n    this.model.addNewProperty();\n    this.events.emit(\"didPropertyAdded\")\n  }\n\n  protected removeSelectedRow(){\n    let row = this.listView.getSelectedRow();\n    this.model.removePropertyAt(row)\n    this.events.emit(\"didPropertyRemoved\")\n  }\n\n  protected fireDataChanged(){\n    this.events.emit(\"didDataChanged\")\n  }\n\n  public destroy(){\n    this.events.removeAllListeners();\n    this.listView.destroy();\n    this.toolbar.remove();\n    this.toolbar = null;\n    this.model.destroy();\n    this.model = null;\n    super.destroy();\n  }\n\n}\n\nclass VariantsPlatformListViewModel implements UIExtendedListViewModel {\n\n  protected properties:Array<VariantPreference>\n  protected events:EventEmitter;\n  protected variant:Variant;\n  protected platformName:string;\n\n  constructor(platformName:string,variant:Variant){\n    this.variant = variant;\n    this.platformName = platformName;\n    if (platformName==='global'){\n      this.properties = variant.preferences;\n    } else {\n      this.properties = variant.getOrCreatePlatformByName(this.platformName).preferences;\n    }\n    this.events = new EventEmitter();\n  }\n\n  public addEventListener(event:string,listener):VariantsPlatformListViewModel {\n      this.events.addListener(event, listener);\n      return this;\n  }\n\n  public removeEventListener(event:string,listener):VariantsPlatformListViewModel {\n      this.events.removeListener(event, listener);\n      return this;\n  }\n\n  public addNewProperty(){\n    this.properties.push(new VariantPreference(\"New Property Name\", \"New Property Value\"))\n    this.fireModelChanged();\n  }\n\n  public removePropertyAt(index:number){\n    if (index>=0){\n      this.properties.splice(index, 1);\n      this.fireModelChanged();\n    }\n  }\n\n  hasHeader():boolean{\n    return true\n  }\n\n  getRowCount():number {\n    return this.properties.length\n  }\n\n  getColCount():number {\n    return 2\n  }\n\n  getValueAt(row:number, col:number):any {\n    let property:VariantPreference =  this.properties[row];\n    if (col===0){\n      return property.name;\n    } else if (col===1){\n      return property.value;\n    }\n  }\n\n  getClassNameAt(row:number, col:number):string{\n    return \"\"\n  }\n\n  getColumnName(col:number):string {\n    if (col===0){\n      return \"Property\"\n    } else if (col===1){\n      return \"Value\"\n    }\n    return col+\"?\"\n  }\n\n  getClassName():string {\n    return \"\"\n  }\n\n  isCellEditable(row:number, col:number):boolean {\n    return true;\n  }\n\n  onValueChanged(row:number, col:number, value:any) {\n    let property:VariantPreference =  this.properties[row];\n    if (col===0){\n      property.name = value;\n    } else if (col===1){\n      property.value = value;\n    }\n    this.fireModelChanged();\n  }\n\n  onEditValidation(row:number, col:number, value:any):UIExtendedListViewValidationResult {\n    return {\n      validationStatus:true,\n      validationErrorMessage:\"\",\n      showValidationError:false\n    };\n  }\n\n  protected fireModelChanged(){\n    this.events.emit(\"didModelChanged\", this)\n  }\n\n  public destroy(){\n    this.events.removeAllListeners();\n    this.events = null;\n  }\n\n}\n"]}