{"version":3,"file":"VariantsEditorCtrl.js","sourceRoot":"","sources":["../../../../src/views/ProjectSettings/variants/VariantsEditorCtrl.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n* Dynamic Engine Workbench\n* Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n* MIT Licensed\n*/\n\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { Logger } from '../../../logger/Logger'\nimport { UIExtendedListView, UIExtendedListViewModel, UIExtendedListViewValidationResult } from '../../../ui-components/UIExtendedListView'\nimport { UIComponent, UIBaseComponent } from '../../../ui-components/UIComponent'\nimport { UITreeViewModel, UITreeViewSelectListener, UITreeView, UITreeItem } from '../../../ui-components/UITreeView'\nimport { UIButtonGroupMode, UIButtonConfig, UIButtonGroup } from '../../../ui-components/UIButtonGroup'\nimport { UITabbedView, UITabbedViewItem, UITabbedViewTabType } from '../../../ui-components/UITabbedView'\nimport { VariantsGridCtrl } from './VariantsGridCtrl'\nimport { VariantsManager, VariantsModel, Variant, VariantPlatform, VariantPreference } from '../../../DEWorkbench/VariantsManager'\nimport { UIModalPrompt } from '../../../ui-components/UIModalPrompt'\n\nexport class VariantsEditorCtrl extends UIBaseComponent {\n\n    private projectRoot:string;\n    private tabbedView: UITabbedView;\n    private events:EventEmitter;\n    private variantsManager:VariantsManager;\n    private variantsModel:VariantsModel;\n    private modalPrompt:UIModalPrompt;\n\n    constructor(projectRoot:string){\n      super()\n      this.events = new EventEmitter()\n      this.projectRoot = projectRoot;\n      this.variantsManager = new VariantsManager(this.projectRoot)\n      this.initUI();\n    }\n\n    protected initUI(){\n\n      // tabbed toolbar\n      let addVariantButton = createElement('button',{\n        //elements : [ createText(\"New...\")],\n        className: 'btn btn-xs icon icon-gist-new'\n      })\n      atom[\"tooltips\"].add(addVariantButton, {title:'Create a new Variant'})\n      addVariantButton.addEventListener('click', (evt)=>{\n        this.promtpForNewVariant()\n      })\n      let removeVariantButton = createElement('button',{\n        //elements : [ createText(\"Delete\")],\n        className: 'btn btn-xs icon icon-dash'\n      })\n      atom[\"tooltips\"].add(removeVariantButton, {title:'Remove selected Variant'})\n      removeVariantButton.addEventListener('click',()=>{\n        this.promtpForRemoveVariant()\n      })\n      let renameVariantButton = createElement('button',{\n        //elements : [ createText(\"Rename\")],\n        className: 'btn btn-xs icon icon-pencil'\n      })\n      atom[\"tooltips\"].add(renameVariantButton, {title:'Rename selected Variant'})\n      renameVariantButton.addEventListener('click',()=>{\n        this.promtpForRenameVariant()\n      })\n      let cloneVariantButton = createElement('button',{\n        className: 'btn btn-xs icon icon-clippy'\n      })\n      atom[\"tooltips\"].add(cloneVariantButton, {title:'Clone selected Variant'})\n      cloneVariantButton.addEventListener('click',()=>{\n        this.promtpForCloneVariant()\n      })\n      let tabbedToolbar = createElement('div',{\n        elements: [\n          createElement('div', {\n            elements: [addVariantButton, removeVariantButton, renameVariantButton, cloneVariantButton],\n            className: 'btn-group'\n          })\n        ], className: 'btn-toolbar'\n      });\n      tabbedToolbar.style.float = \"right\"\n      // end tabbed toolbar\n\n      this.tabbedView = new UITabbedView()\n              .setBottomToolbar(tabbedToolbar);\n\n      this.mainElement = this.tabbedView.element()\n\n      this.modalPrompt = new UIModalPrompt()\n\n      this.reload();\n    }\n\n    public reload(){\n      this.variantsManager.load().then((results)=>{\n        this.variantsModel = results;\n        this.updateUI()\n      },(error)=>{\n        Logger.consoleLog(\"Failure:\", error)\n      });\n    }\n\n    private updateUI(){\n      this.tabbedView.removeAllTabs();\n      if (this.variantsModel && this.variantsModel.variants){\n        for (var i=0;i<this.variantsModel.variants.length;i++){\n          let variant:Variant = this.variantsModel.variants[i]\n            let variantView = this.createVariantView(variant)\n            this.tabbedView.addView(variantView)\n        }\n      }\n    }\n\n    public addEventListener(event:string,listener:any){\n      this.events.addListener(event, listener)\n    }\n\n    public removeEventListener(event:string, listener:any){\n      this.events.removeListener(event, listener)\n    }\n\n    public promtpForNewVariant(){\n      this.modalPrompt.show('', 'New variant name', (variantName)=>{\n        this.addNewVariant(variantName)\n      },()=>{\n        //cencelled by user\n      });\n    }\n\n    public promtpForRenameVariant(){\n      let selectedTab = this.tabbedView.getSelectedTab();\n      if (selectedTab){\n        this.modalPrompt.show(selectedTab.getTitle(), \"Rename '\"+selectedTab.getTitle()+\"' variant\", (newVariantName)=>{\n          this.renameVariant(selectedTab.getTitle(), newVariantName)\n          selectedTab.setTitle(newVariantName);\n        },()=>{\n          //cencelled by user\n        });\n      }\n    }\n\n    public promtpForCloneVariant(){\n      let selectedTab = this.tabbedView.getSelectedTab();\n      if (selectedTab){\n        this.modalPrompt.show(selectedTab.getTitle(), \"New clone name for '\"+selectedTab.getTitle()+\"' variant\", (newVariantName)=>{\n          this.cloneVariant(selectedTab.getTitle(), newVariantName)\n        },()=>{\n          //cencelled by user\n        });\n      }\n    }\n\n    public promtpForRemoveVariant(){\n      let selectedTab = this.tabbedView.getSelectedTab();\n      if (selectedTab){\n      }\n\n      const selected = atom.confirm({\n          message: 'Delete Variant',\n          detailedMessage: 'Do you want to confirm the ' + selectedTab.getTitle() +' variant deletion ?',\n          buttons: ['Yes, Delete it', 'Cancel']\n        });\n        if ((selected as any)==0){\n          this.removeVariant(selectedTab.getTitle());\n        }\n    }\n\n    public cloneVariant(variantToCloneName:string,newVariantName:string){\n      let variantToClone:Variant = this.variantsModel.getVariant(variantToCloneName);\n      let newCloneVariant = this.variantsModel.addVariant(newVariantName);\n      newCloneVariant.cloneFrom(variantToClone);\n      let newVariantView = this.createVariantView(newCloneVariant);\n      this.tabbedView.addView(newVariantView)\n      this.saveVariantsChanges()\n    }\n\n    public renameVariant(variantName:string,newVariantName:string){\n      this.variantsModel.getVariant(variantName).name = newVariantName;\n      this.saveVariantsChanges()\n    }\n\n    public addNewVariant(variantName:string){\n      let newVariant = this.variantsModel.addVariant(variantName);\n      let newVariantView = this.createVariantView(newVariant);\n      this.tabbedView.addView(newVariantView)\n      this.saveVariantsChanges()\n    }\n\n    public removeVariant(variantName:string){\n      this.variantsModel.removeVariant(variantName);\n      this.tabbedView.removeViewByTitle(variantName)\n      this.saveVariantsChanges()\n    }\n\n    protected createVariantView(variant:Variant):UITabbedViewItem {\n      let variantsCtrl = new VariantsGridCtrl(variant);\n      variantsCtrl.addEventListener('didDataChanged',(variantsGridCtrl)=>{\n        this.saveVariantsChanges();\n        this.fireDataChanged();\n      })\n      variantsCtrl.element().style.width = \"100%\"\n      let variantView = new UITabbedViewItem(variant.name, variant.name, variantsCtrl.element())\n      return variantView;\n    }\n\n    protected saveVariantsChanges(){\n      this.variantsManager.store(this.variantsModel);\n    }\n\n    protected fireDataChanged(){\n      this.events.emit(\"didDataChanged\", this)\n    }\n\n    public destroy(){\n      this.events.removeAllListeners();\n      this.tabbedView.destroy();\n      super.destroy();\n      this.events = null;\n    }\n\n}\n"]}