{"version":3,"file":"AppSignatureView.js","sourceRoot":"","sources":["../../../src/views/ProjectSettings/AppSignatureView.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AAEX;;;;GAIG;AAEH,OAAO,EACN,UAAU,EACV,aAAa,EAQb,MAAM,qBAAqB,CAAC;AAO7B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAA;AACjE,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAA;AACtG,OAAO,EAAe,eAAe,EAAE,MAAM,iCAAiC,CAAA;AAE9E,MAAM,uBAAwB,SAAQ,eAAe;IAKnD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEO,OAAO;QAEb,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAEhF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAQ,KAAK,EAAG,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAC3J,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,SAAS,EAAI,SAAS,EAAG,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAEnK,IAAI,CAAC,WAAW,GAAG,IAAI,aAAa,EAAE;aACjB,QAAQ,CAAC,eAAe,CAAC;aACzB,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;aACvC,kBAAkB,CAAC,+CAA+C,CAAC,CAAC;QAEzF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAChD,CAAC;IAGD,qBAAqB,CAAC,KAAY;QAC9B,IAAI,EAAE,GAAG,aAAa,CAAC,KAAK,EAAC;YAC3B,QAAQ,EAAG;gBACT,UAAU,CAAC,KAAK,CAAC;aAClB;SACF,CAAC,CAAC;QACH,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,aAAa,CAAC;QAC7C,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;QAC7B,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;CAEF","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Cordova, CordovaPlatform, CordovaPlugin } from '../../cordova/Cordova'\nimport { Logger } from '../../logger/Logger'\nimport { UIPluginsList } from '../../ui-components/UIPluginsList'\nimport { UIStackedView } from '../../ui-components/UIStackedView'\nimport { UITabbedView, UITabbedViewItem, UITabbedViewTabType } from '../../ui-components/UITabbedView'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\n\nexport class AppSignatureView extends UIBaseComponent {\n\n  private tabbedView: UITabbedView;\n  private stackedPage: UIStackedView;\n\n  constructor(){\n    super();\n    this.buildUI();\n  }\n\n  private buildUI(){\n\n    this.tabbedView = new UITabbedView().setTabType(UITabbedViewTabType.Horizontal);\n\n    this.tabbedView.addView(new UITabbedViewItem('ios',       'iOS',  this.createSimpleEmptyView('iOS App Signing here')).setTitleClass('icon icon-settings'));\n    this.tabbedView.addView(new UITabbedViewItem('android',   'Android',  this.createSimpleEmptyView('Android App Signing here')).setTitleClass('icon icon-settings'));\n\n    this.stackedPage = new UIStackedView()\n                        .setTitle('App Signature')\n                        .setInnerView(this.tabbedView.element())\n                        .addHeaderClassName('de-workbench-stacked-view-header-section-thin');\n\n    this.mainElement = this.stackedPage.element();\n  }\n\n\n  createSimpleEmptyView(color:string):HTMLElement {\n      let el = createElement('div',{\n        elements : [\n          createText(color)\n        ]\n      });\n      el.style[\"background-color\"] = 'transparent';\n      el.style[\"width\"] = \"100%\";\n      el.style[\"heightz\"] = \"100%\";\n      return el;\n  }\n\n}\n"]}