{"version":3,"file":"DebugCallStackView.js","sourceRoot":"","sources":["../../../src/views/DebugArea/DebugCallStackView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor\n } from '../../element/index';\n\nimport { UIDebugBlock } from './UIDebugBlock'\nimport { UIExtComponent } from '../../ui-components/UIComponent'\nimport { CallStackFrame, CallStackFrames } from '../../DEWorkbench/debugger/DebuggerCommons'\nimport { parse } from 'path'\n\nconst { CompositeDisposable } = require('atom')\n\nexport class DebugCallStackView extends UIDebugBlock {\n\n  private toolbar:DebugToolbar\n  private callStackContentElement: HTMLElement\n\n  constructor (params:any) {\n    super(params)\n  }\n\n  /**\n   * Initialize the UI\n   */\n   protected createUIBlock():HTMLElement {\n\n     this.toolbar = new DebugToolbar()\n     this.toolbar.addEventListener('didPause',()=>{\n       //alert(\"didPause\")\n     })\n\n     this.callStackContentElement = createElement('de-workbench-debug-group-content', {\n       className: 'callstack'\n     })\n\n     let el = createElement('div', {\n       elements: [ this.toolbar.element(),  this.callStackContentElement ]\n     })\n     return el;\n   }\n\n   insertCallStackFromFrames (frames: CallStackFrames) {\n     this.clearCallStack()\n     frames.forEach((frame, index) => {\n       return insertElement(this.callStackContentElement,\n         this.createFrameLine(frame, index === 0))\n     })\n   }\n\n   clearCallStack () {\n     this.callStackContentElement.innerHTML = ''\n   }\n\n   createFrameLine (frame: CallStackFrame, indicate: boolean) {\n     let file = parse(frame.filePath)\n     let indicator = createIcon(indicate ? 'arrow-right-solid' : '')\n     if (indicate) {\n       indicator.classList.add('active')\n     }\n     return createElement('xatom-debug-group-item', {\n       options: {\n         click: () => {\n           this.fireEvent('didOpenFrame', frame)\n           this.fireEvent('didOpenFile',\n             frame.filePath,\n             frame.lineNumber,\n             frame.columnNumber)\n         }\n       },\n       elements: [\n         createElement('span', {\n           elements: [indicator, createText(frame.name || '(anonymous)')]\n         }),\n         createElement('span', {\n           className: 'file-reference',\n           elements: [\n             createText(file.base),\n             createElement('span', {\n               className: 'file-position',\n               elements: [ createText(`${frame.lineNumber + 1}${ frame.columnNumber > 0 ? ':' + frame.columnNumber : '' }`) ]\n             })\n           ]\n         })\n       ]\n     })\n   }\n\n\n}\n\n\nclass DebugToolbar extends UIExtComponent {\n\n  private pauseButton: HTMLElement\n  private resumeButton: HTMLElement\n  private stepOverButton: HTMLElement\n  private stepIntoButton: HTMLElement\n  private stepOutButton: HTMLElement;\n  private subscriptions:any = new CompositeDisposable()\n\n\n  constructor(){\n    super();\n    this.initUI();\n  }\n\n  protected initUI(){\n\n    this.pauseButton = createButton({\n       click: () => {\n         this.fireEvent('didPause')\n       }\n     }, [createIcon('pause'), createText('Pause')])\n\n     this.resumeButton = createButton({\n       click: () => {\n         this.fireEvent('didResume')\n       }\n     }, [createIcon('resume'), createText('Resume')])\n\n     this.stepOverButton = createButton({\n       tooltip: {\n         subscriptions: this.subscriptions,\n         title: 'Step Over'\n       },\n       click: () => {\n         this.fireEvent('didStepOver')\n       }\n     }, [createIcon('step-over')])\n\n     this.stepIntoButton = createButton({\n       tooltip: {\n         subscriptions: this.subscriptions,\n         title: 'Step Into'\n       },\n       click: () => {\n         this.fireEvent('didStepInto')\n       }\n     }, [createIcon('step-into')])\n\n     this.stepOutButton = createButton({\n       tooltip: {\n         subscriptions: this.subscriptions,\n         title: 'Step Out'\n       },\n       click: () => {\n         this.fireEvent('didStepOut')\n       }\n     }, [createIcon('step-out')])\n\n     let toolbarContainer = createElement('de-workbench-debug-controls',{\n       elements : [ this.pauseButton, this.resumeButton, this.stepOverButton, this.stepIntoButton, this.stepOutButton]\n     })\n\n     this.togglePause(false)\n\n     this.mainElement = toolbarContainer;\n  }\n\n  public togglePause (status: boolean) {\n    this.resumeButton.style.display = status ? null : 'none'\n    this.pauseButton.style.display = status ? 'none' : null\n  }\n\n\n}\n"]}