{"version":3,"file":"SendPushView.js","sourceRoot":"","sources":["../../../src/views/PushTool/SendPushView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor,\n createControlBlock\n} from '../../element/index';\n\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Logger } from '../../logger/Logger'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { UINotifications } from '../../ui-components/UINotifications'\nimport { UIStackedView } from '../../ui-components/UIStackedView'\nimport { UIInputFormElement, FormType } from '../../ui-components/UIInputFormElement'\nimport { UICommonsFactory, FormActionsOptions, FormActionType } from '../../ui-components/UICommonsFactory'\nimport { UIButtonGroup, UIButtonConfig, UIButtonGroupMode } from '../../ui-components/UIButtonGroup'\nimport { PushService, PushPlatform, PushServiceOptions } from '../../services/push/PushService'\nimport { PushSender, PushMessage } from '../../services/push/PushSender'\n\nconst _ = require ('lodash')\n\nexport class SendPushView extends UIBaseComponent {\n\n\n    projectRoot:string;\n    private stackedPage: UIStackedView;\n    private targetrPlatformSelector:UIButtonGroup;\n    private pushService:PushService;\n\n    private recipentsCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Recipients', formType:FormType.FlexForm });\n    private alertCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Alert', formType:FormType.FlexForm  });\n    private topicCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Topic', formType:FormType.FlexForm  });\n    private titleCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Title', formType:FormType.FlexForm  });\n    private bodyCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Body', formType:FormType.FlexForm  });\n    private soundCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Sound', formType:FormType.FlexForm  });\n    private badgeCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Badge', formType:FormType.FlexForm  });\n    private categoryCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'Category', formType:FormType.FlexForm  });\n    private jsonPayloadCrtl:UIInputFormElement;// = new UIInputFormElement({ caption: 'JSON Payload', formType:FormType.FlexForm  });\n    private iconCrtl:UIInputFormElement;\n\n    constructor(projectRoot:string){\n      super();\n      this.projectRoot = projectRoot;\n      this.pushService = new PushService();\n      this.initUI();\n    }\n\n    protected initUI(){\n      let form = this.createForm();\n\n      let sectionContainer = createElement('div',{\n        elements: [ form ],\n        className: 'section-container'\n      })\n\n      let innerPage = createElement('div',{\n        elements: [ sectionContainer ],\n        className: 'section'\n      })\n\n      this.stackedPage = new UIStackedView({\n                            titleIconClass: 'icon-comment',\n                            subtle: 'This tool allows you to send notifications to a device list'\n                          })\n                          .setTitle('Send Push')\n                          .setInnerView(innerPage)\n                          .addHeaderClassName('de-workbench-stacked-view-header-section-thin');\n\n      this.mainElement = this.stackedPage.element();\n\n      this.loadLastMessageSent();\n\n    }\n\n    protected createForm(){\n      let actionButtonsOpt:FormActionsOptions = {\n        cancel : {\n          caption : 'Clear Data'\n        },\n        commit : {\n          caption : 'Send Push'\n        },\n        actionListener: (actionType:number)=>{\n          if (actionType===FormActionType.Cancel){\n            this.clearData()\n          } else if (actionType===FormActionType.Commit){\n            this.sendPush()\n          }\n        }\n      }\n      let actionButtonsContainer = UICommonsFactory.createFormActions(actionButtonsOpt)\n      insertElement(actionButtonsContainer, this.createTargetPlatformSelector())\n\n\n      let formElements = this.createFormElements();\n      let ulEl = createElement('ul',{\n        elements: [ formElements, actionButtonsContainer ],\n        className: 'flex-outer'\n      })\n\n\n      let formEl = createElement('form',{\n        elements: [ ulEl ]\n      })\n\n      return formEl;\n    }\n\n    protected createFormElements():Array<HTMLElement>{\n      this.recipentsCrtl = new UIInputFormElement({ caption: 'Recipients', formType:FormType.FlexForm });\n      this.alertCrtl = new UIInputFormElement({ caption: 'Alert', formType:FormType.FlexForm  });\n      this.topicCrtl = new UIInputFormElement({ caption: 'Topic', formType:FormType.FlexForm  });\n      this.titleCrtl = new UIInputFormElement({ caption: 'Title', formType:FormType.FlexForm  });\n      this.bodyCrtl = new UIInputFormElement({ caption: 'Body', formType:FormType.FlexForm  });\n      this.soundCrtl = new UIInputFormElement({ caption: 'Sound', formType:FormType.FlexForm  });\n      this.badgeCrtl = new UIInputFormElement({ caption: 'Badge', formType:FormType.FlexForm  });\n      this.categoryCrtl = new UIInputFormElement({ caption: 'Category', formType:FormType.FlexForm  });\n      this.jsonPayloadCrtl = new UIInputFormElement({ caption: 'JSON Payload', formType:FormType.FlexForm  });\n      this.iconCrtl =  new UIInputFormElement({ caption: 'Icon', formType:FormType.FlexForm  });\n\n      return [ this.recipentsCrtl.element(),\n               this.alertCrtl.element(),\n               this.topicCrtl.element(),\n               this.titleCrtl.element(),\n               this.bodyCrtl.element(),\n               this.soundCrtl.element(),\n               this.badgeCrtl.element(),\n               this.categoryCrtl.element(),\n               this.iconCrtl.element(),\n               this.jsonPayloadCrtl.element()\n             ]\n    }\n\n    protected clearData(){\n      Logger.getInstance().debug(\"Cleaning push tool form\")\n      this.recipentsCrtl.setValue(\"\")\n      this.alertCrtl.setValue(\"\")\n      this.topicCrtl.setValue(\"\")\n      this.titleCrtl.setValue(\"\")\n      this.bodyCrtl.setValue(\"\")\n      this.soundCrtl.setValue(\"\")\n      this.badgeCrtl.setValue(\"\")\n      this.categoryCrtl.setValue(\"\")\n      this.jsonPayloadCrtl.setValue(\"\")\n      this.iconCrtl.setValue(\"\")\n    }\n\n    protected async sendPush(){\n      Logger.getInstance().debug(\"Sending push notification...\")\n      let projectSettings = await ProjectManager.getInstance().getProjectSettings(this.projectRoot);\n      let pushConfig = projectSettings.get('push_tool')\n      if (!pushConfig){\n        UINotifications.showError(\"Invalid push configuration\")\n        return; //invalid configuration\n      }\n      let platform = this.getSelectedPlatform();\n      let pushMessage:PushMessage= this.createPushMessage();\n      Logger.getInstance().debug(\"Sending Push notification to \"+ platform +\"...\", JSON.stringify(pushMessage))\n      try {\n        await this.pushService.sendPushMessage(pushMessage, platform, pushConfig)\n        UINotifications.showInfo(\"Push notification send successfully\")\n        Logger.getInstance().info(\"Push notification send successfully\")\n      } catch (ex){\n        Logger.getInstance().error(\"Unable to send Push notification: \", ex)\n        UINotifications.showError(\"Unable to send Push notification: \" + ex)\n      }\n      this.storeLastMessageSent(pushMessage);\n    }\n\n    protected createPushMessage():PushMessage {\n      let rs = this.recipentsCrtl.getValue();\n      let recipientsList:Array<string> = _.split(rs, ',');\n      recipientsList = _.map(recipientsList, _.trim);\n      recipientsList = _.filter(recipientsList, function(o) { return o.length>0; });\n      let pushMessage = {\n        alert: this.alertCrtl.getValue(),\n        badge: this.badgeCrtl.getValue(),\n        sound: this.soundCrtl.getValue(),\n        title: this.titleCrtl.getValue(),\n        body: this.bodyCrtl.getValue(),\n        topic: this.topicCrtl.getValue(),\n        category: this.categoryCrtl.getValue(),\n        payload: this.jsonPayloadCrtl.getValue(),\n        icon: this.iconCrtl.getValue(),\n        recipients: recipientsList\n      }\n      return pushMessage;\n    }\n\n    protected getSelectedPlatform():PushPlatform {\n      let platformStr = this.targetrPlatformSelector.getSelectedButtons() [0]\n      if (platformStr==='apn'){\n        return PushPlatform.APN;\n      } else {\n        return PushPlatform.GCM;\n      }\n    }\n\n    protected createTargetPlatformSelector():HTMLElement{\n      // Project Type Radio\n      this.targetrPlatformSelector = new UIButtonGroup(UIButtonGroupMode.Radio);\n\n        this.targetrPlatformSelector.addButton(new UIButtonConfig().setId('apn')\n                                          .setCaption('Apple APN')\n                                          .setSelected(true));\n\n        this.targetrPlatformSelector.addButton(new UIButtonConfig().setId('gcm')\n                                          .setCaption('Google GCM')\n                                          .setSelected(false));\n\n        return this.targetrPlatformSelector.element();\n    }\n\n    protected async storeLastMessageSent(message:PushMessage) {\n      let projectSettings = await ProjectManager.getInstance().getProjectSettings(this.projectRoot);\n      projectSettings.save('push_tool_lastmsg', message)\n    }\n\n    protected async getLastMessageSent():Promise<PushMessage>{\n      let projectSettings = await ProjectManager.getInstance().getProjectSettings(this.projectRoot);\n      let ret = projectSettings.get('push_tool_lastmsg')\n      return ret;\n    }\n\n    protected async loadLastMessageSent():Promise<any>{\n      let message = await this.getLastMessageSent();\n      if (!message){\n        return null;\n      } else {\n        this.updateUI(message);\n      }\n    }\n\n    protected updateUI(message:PushMessage){\n      this.recipentsCrtl.setValue(_.join(message.recipients, ','))\n      this.alertCrtl.setValue(message.alert)\n      this.topicCrtl.setValue(message.topic)\n      this.titleCrtl.setValue(message.title)\n      this.bodyCrtl.setValue(message.body)\n      this.soundCrtl.setValue(message.sound)\n      this.badgeCrtl.setValue(message.badge)\n      this.categoryCrtl.setValue(message.category)\n      this.jsonPayloadCrtl.setValue(message.payload)\n      this.iconCrtl.setValue(message.icon)\n    }\n\n}\n"]}