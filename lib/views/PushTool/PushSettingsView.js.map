{"version":3,"file":"PushSettingsView.js","sourceRoot":"","sources":["../../../src/views/PushTool/PushSettingsView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport {\n createText,\n createElement,\n insertElement,\n createGroupButtons,\n createButton,\n createIcon,\n createIconFromPath,\n attachEventFromObject,\n createTextEditor\n} from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { ProjectManager } from '../../DEWorkbench/ProjectManager'\nimport { Logger } from '../../logger/Logger'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport * as _ from 'lodash'\nimport { UINotifications } from '../../ui-components/UINotifications'\nimport { UIStackedView } from '../../ui-components/UIStackedView'\nimport { UIInputFormElement, UIInputWithButtonFormElement, UIInputBrowseForFileFormElement, FormType } from '../../ui-components/UIInputFormElement'\nimport { UICommonsFactory, FormActionsOptions, FormActionType } from '../../ui-components/UICommonsFactory'\n\nexport class PushSettingsView extends UIBaseComponent {\n\n  projectRoot:string;\n  private stackedPage: UIStackedView;\n\n  iosPemCertPathCrtl:UIInputBrowseForFileFormElement;\n  iosPemKeyPathCrtl:UIInputBrowseForFileFormElement;\n  iosPassphraseCrtl:UIInputFormElement;\n  gcmApiKeyCrtl:UIInputFormElement;\n\n\n  constructor(projectRoot:string){\n    super();\n    this.projectRoot = projectRoot;\n    this.initUI();\n  }\n\n  protected initUI(){\n    let form = this.createForm();\n\n    let sectionContainer = createElement('div',{\n      elements: [ form ],\n      className: 'section-container'\n    })\n\n    let innerPage = createElement('div',{\n      elements: [ sectionContainer ],\n      className: 'section'\n    })\n\n    this.stackedPage = new UIStackedView({\n                          titleIconClass: 'icon-gear',\n                          subtle: 'This tool allows you to send notifications to a device list'\n                        })\n                        .setTitle('Push Settings')\n                        .setInnerView(innerPage)\n                        .addHeaderClassName('de-workbench-stacked-view-header-section-thin');\n\n    this.mainElement = this.stackedPage.element();\n\n    this.reloadConfig();\n  }\n\n  protected createForm(){\n\n    let actionButtonsOpt:FormActionsOptions = {\n      cancel : {\n        caption : 'Revert Changes'\n      },\n      commit : {\n        caption : 'Save Changes'\n      },\n      actionListener: (actionType:number)=>{\n        if (actionType===FormActionType.Cancel){\n          this.revertConfig()\n        } else if (actionType===FormActionType.Commit){\n          this.saveConfig()\n        }\n      }\n    }\n    let actionButtonsContainer = UICommonsFactory.createFormActions(actionButtonsOpt)\n    let formElements = this.createFormElements();\n    let ulEl = createElement('ul',{\n      elements: [ formElements,actionButtonsContainer ],\n      className: 'flex-outer'\n    })\n\n\n    let formEl = createElement('form',{\n      elements: [ ulEl ]\n    })\n\n    return formEl;\n  }\n\n  protected createFormElements():Array<HTMLElement>{\n    let apnSectionTitle = UICommonsFactory.createFormSectionTitle('Apple APN')\n    this.iosPemCertPathCrtl = new UIInputBrowseForFileFormElement({ caption: 'PEM Cert. Path', placeholder: 'Enter .pem certificate path here', formType:FormType.FlexForm });\n    this.iosPemKeyPathCrtl = new UIInputBrowseForFileFormElement({ caption: 'PEM Key. Path', placeholder: 'Enter .pem key path here', formType:FormType.FlexForm });\n    this.iosPassphraseCrtl = new UIInputFormElement({ caption: 'Passphrase', placeholder: 'Enter passphrase here', password:true, formType:FormType.FlexForm });\n    let divider = UICommonsFactory.createFormSeparator();\n    let gcmSectionTitle = UICommonsFactory.createFormSectionTitle('Google GCM')\n    this.gcmApiKeyCrtl = new UIInputFormElement({ caption: 'API Key', placeholder: 'Enter GCM API key here', formType:FormType.FlexForm });\n\n    return [ apnSectionTitle,\n            this.iosPemCertPathCrtl.element(),\n            this.iosPemKeyPathCrtl.element(),\n            this.iosPassphraseCrtl.element(),\n            divider,\n            gcmSectionTitle,\n            this.gcmApiKeyCrtl.element()\n           ]\n  }\n\n  protected async reloadConfig(){\n    let projectSettings = await ProjectManager.getInstance().getProjectSettings(this.projectRoot);\n    console.log(\"reloadConfig \", projectSettings)\n    let pushConfig = projectSettings.get('push_tool')\n    if (!pushConfig){\n      return;\n    }\n    if (pushConfig.apn && pushConfig.apn.cert){\n      this.iosPemCertPathCrtl.setValue(pushConfig.apn.cert)\n    }\n    if (pushConfig.apn && pushConfig.apn.key){\n      this.iosPemKeyPathCrtl.setValue(pushConfig.apn.key)\n    }\n    if (pushConfig.apn && pushConfig.apn.passphrase){\n        this.iosPassphraseCrtl.setValue(pushConfig.apn.passphrase)\n    }\n    if (pushConfig.gcm && pushConfig.gcm.apikey){\n        this.gcmApiKeyCrtl.setValue(pushConfig.gcm.apikey)\n    }\n  }\n\n  protected revertConfig(){\n    this.reloadConfig();\n  }\n\n  protected async saveConfig(){\n    let projectSettings = await ProjectManager.getInstance().getProjectSettings(this.projectRoot);\n    let pushConfig = {\n      'apn': {\n        'cert': this.iosPemCertPathCrtl.getValue(),\n        'key' : this.iosPemKeyPathCrtl.getValue(),\n        'passphrase' : this.iosPassphraseCrtl.getValue(),\n        'production' : false\n      },\n      'gcm': {\n        'apikey' : this.gcmApiKeyCrtl.getValue()\n      }\n    }\n    projectSettings.save('push_tool', pushConfig)\n    UINotifications.showInfo(\"Push configuration saved successfully.\")\n  }\n\n\n\n}\n"]}