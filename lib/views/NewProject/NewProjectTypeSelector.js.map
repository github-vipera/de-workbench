{"version":3,"file":"NewProjectTypeSelector.js","sourceRoot":"","sources":["../../../src/views/NewProject/NewProjectTypeSelector.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\n import {\n   createText,\n   createLabel,\n   createBlock,\n   createElement,\n   insertElement,\n   createGroupButtons,\n   createButton,\n   createIcon,\n   createIconFromPath,\n   attachEventFromObject,\n   createTextEditor,\n   createControlBlock\n } from '../../element/index';\n\nimport { EventEmitter }  from 'events'\nimport { UIButtonGroup, UIButtonConfig, UIButtonGroupMode } from '../../ui-components/UIButtonGroup'\nimport { UITextEditorExtended } from '../../ui-components/UITextEditorExtended'\nimport { UIBaseComponent, UIComponent } from '../../ui-components/UIComponent'\nimport { UISelect, UISelectItem } from '../../ui-components/UISelect'\nimport { DEWBResourceManager } from '../../DEWorkbench/DEWBResourceManager'\n\nclass ProjectTypeInfo {\n  public name:string;\n  public description : string;\n  public templates : Array<string>\n}\n\nexport class NewProjectTypeSelector extends UIBaseComponent {\n\n  private projectTypeButtons:UIButtonGroup;\n  private projectTypes:Array<ProjectTypeInfo>;\n  private projectTemplateSection:any;\n  private projectTemplateSelector:ProjectTemplateSelector;\n  private captionElement:HTMLElement;\n  private buttonListener:Function;\n\n  constructor(){\n    super();\n    this.initUI();\n  }\n\n  private initUI(){\n\n    // Project Type Radio\n    this.projectTypeButtons = new UIButtonGroup(UIButtonGroupMode.Radio);\n    let selectorBlock = createControlBlock('project-type','Project Type',this.projectTypeButtons.element());\n\n    this.buttonListener = (evt)=>{ this.onTypeSelected(evt) }\n\n    // Load project types from resources\n    this.projectTypes = DEWBResourceManager.getJSONResource('project_types.json')[\"projectTypes\"];\n    for (var i=0;i<this.projectTypes.length;i++){\n        let projectType = this.projectTypes[i];\n        this.projectTypeButtons.addButton(new UIButtonConfig().setId(projectType.name)\n                                                              .setCaption(projectType.description)\n                                                              .setSelected(i==0)\n                                                              .setClickListener(this.buttonListener))\n    }\n\n    // Template selector\n    this.projectTemplateSelector = new ProjectTemplateSelector();\n\n    this.mainElement = createElement('div',{\n      elements: [\n        selectorBlock,\n        this.projectTemplateSelector.element()\n      ],\n      className : 'block'\n    })\n\n    //select first type\n    this.onTypeSelected(this.projectTypes[0].name)\n  }\n\n  private getProjectTypeByName(name:string){\n    for (var i=0;i<this.projectTypes.length;i++){\n      if (this.projectTypes[i].name===name){\n        return this.projectTypes[i];\n      }\n    }\n    return null;\n  }\n\n  private onTypeSelected(typeId:string){\n    let projectType = this.getProjectTypeByName(typeId);\n    if (projectType && projectType.templates && projectType.templates.length>0){\n      this.projectTemplateSelector.setTemplates(projectType.templates);\n      this.projectTemplateSelector.show()\n    } else {\n      this.projectTemplateSelector.hide()\n    }\n  }\n\n  public destroy(){\n    this.projectTypes.length = 0;\n    this.projectTypes = undefined;\n    this.projectTypeButtons.destroy();\n    this.projectTypeButtons = undefined;\n    this.projectTemplateSection = undefined;\n    this.projectTemplateSelector.destroy();\n    this.projectTemplateSelector = undefined;\n    super.destroy();\n  }\n\n  public getProjectType(){\n      return this.projectTypeButtons.getSelectedButtons()[0];\n  }\n\n  public getTemplateName(){\n      return this.projectTemplateSelector.getSelectedTemplate();\n  }\n\n}\n\nclass ProjectTemplateSelector extends UIBaseComponent {\n\n  //private cmbTemplates:HTMLElement;\n  private cmbTemplates:UISelect;\n\n  constructor(){\n    super();\n    this.initUI();\n  }\n\n  private initUI(){\n\n    this.cmbTemplates = new UISelect();\n\n    // Info Label\n    let labelInfo = createLabel(\"In order to create a Ionic project you need to have installed on your computer the Ionic cli utility.To check if it's already installed launchÂ 'ionic help' command into the terminal.\");\n    labelInfo.classList.add('text-warning')\n\n    let block = createControlBlock('project-template-selector','Project Template', this.cmbTemplates.element(),'settings-view');\n\n    this.mainElement = createElement('div',{\n      elements:[\n        labelInfo, block\n      ]\n    })\n\n    this.hide();\n  }\n\n  public show(){\n    this.mainElement.style.display = \"initial\";\n  }\n\n  public hide(){\n    this.mainElement.style.display = \"none\";\n  }\n\n  public destroy(){\n    this.cmbTemplates.setItems([]);\n    this.cmbTemplates.destroy();\n    this.cmbTemplates = undefined;\n    super.destroy();\n  }\n\n  public setTemplates(templates:Array<string>){\n    this.cmbTemplates.setItems([]);\n    let items = new Array<UISelectItem>();\n    for (var i=0;i<templates.length;i++){\n      let item:UISelectItem = {\n        name : templates[i],\n        value : templates[i],\n      };\n      items.push(item);\n    }\n    this.cmbTemplates.setItems(items);\n  }\n\n  public getSelectedTemplate():string {\n    return this.cmbTemplates.getSelectedItem();\n  }\n\n\n\n}\n"]}