{"version":3,"file":"TaskViewContentPanel.js","sourceRoot":"","sources":["../../../src/views/TaskConfig/TaskViewContentPanel.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createButton,\n  createIcon,\n  attachEventFromObject,\n  createSelect,\n  createInput\n} from '../../element/index';\nimport { UIBaseComponent } from '../../ui-components/UIComponent'\nimport { CordovaTaskConfiguration, TaskConstraints } from '../../cordova/CordovaTasks'\nimport { CordovaPlatform, CordovaProjectInfo } from '../../cordova/Cordova'\nimport { UIInputFormElement } from '../../ui-components/UIInputFormElement'\nimport { Variant, VariantsManager } from '../../DEWorkbench/VariantsManager'\nimport { EventEmitter }  from 'events'\nimport { CordovaDeviceManager, CordovaDevice } from '../../cordova/CordovaDeviceManager'\nimport { UISelect, UISelectItem, UISelectListener } from '../../ui-components/UISelect'\nimport { UILineLoader } from '../../ui-components/UILineLoader'\nimport { map, forEach } from 'lodash'\nimport { UITabbedView, UITabbedViewItem, UITabbedViewTabType } from '../../ui-components/UITabbedView'\nimport { TaskViewEnvironmentTab } from './TaskViewEnvironmentTab'\nimport { Logger,LoggerListener ,LogLevel} from '../../logger/Logger'\n\nconst NONE_PLACEHOLDER:string = '-- None --';\n\nexport class TaskViewContentPanel extends UIBaseComponent{\n  private taskConfig:CordovaTaskConfiguration\n  private projectInfo:CordovaProjectInfo\n  private taskNameEl:UIInputFormElement;\n  private deviceManager:CordovaDeviceManager;\n  private variantManager:VariantsManager;\n  private platformSelect:UISelect;\n  private platformSelectListener:UISelectListener;\n  private deviceSelect:UISelect;\n  private variantSelect:UISelect;\n  private npmScriptsSelect:UISelect;\n  private deviceLineLoader: UILineLoader;\n  private variantsLineLoader: UILineLoader;\n  private isReleaseEl:HTMLElement\n  private evtEmitter:EventEmitter\n  private tabbedView:UITabbedView\n  private taskViewEnvironmentTab:TaskViewEnvironmentTab\n  private deviceRequestId:number = 0;\n  constructor(evtEmitter:EventEmitter){\n    super();\n    this.evtEmitter = evtEmitter;\n    this.initUI();\n  }\n\n  private initUI(){\n    this.mainElement = createElement('atom-panel',{\n      className:'de-workbench-taskpanel-content',\n      elements:[\n      ]\n    });\n    this.initTabView();\n    this.initGeneralTabUI();\n    this.initEnvironmentTabUI();\n    this.setAllTabsVisibility(false);\n  }\n\n  private initTabView(){\n    this.tabbedView = new UITabbedView().setTabType(UITabbedViewTabType.Horizontal);\n    insertElement(this.mainElement,this.tabbedView.element());\n  }\n\n  private initGeneralTabUI(){\n    let panelContainer:HTMLElement = createElement('div',{\n      className:'de-workbench-taskpanel-content-container',\n      elements:[\n      ]\n    });\n    panelContainer.classList.add('form-container');\n    this.createTaskNameEl(panelContainer);\n    this.createPlatformSelect(panelContainer);\n    this.createDeviceSelect(panelContainer);\n    this.createReleaseCheckbox(panelContainer);\n    this.createVariantSelect(panelContainer);\n    this.createNodeTaskSelect(panelContainer);\n    this.tabbedView.addView(new UITabbedViewItem('GeneralPanel',\"General\",panelContainer));\n  }\n\n  private initEnvironmentTabUI(){\n    this.taskViewEnvironmentTab = new TaskViewEnvironmentTab();\n    let panelContainer:HTMLElement = createElement('div',{\n      className:'de-workbench-taskpanel-content-container',\n      elements:[\n        this.taskViewEnvironmentTab.element()\n      ]\n    });\n    this.tabbedView.addView(new UITabbedViewItem('EnvironmentPanel',\"Environment\",panelContainer));\n  }\n\n  private createTaskNameEl(panelContainer:HTMLElement){\n    this.taskNameEl = new UIInputFormElement().setCaption('Task name').setPlaceholder('Your task name').addEventListener('change',(evtCtrl:UIInputFormElement)=>{\n      if(this.taskConfig){\n        this.taskConfig.name = this.taskNameEl.getValue();\n        this.evtEmitter.emit('didChangeName',this.taskConfig.name);\n      }\n    });\n    insertElement(panelContainer,this.taskNameEl.element());\n  }\n\n  private createPlatformSelect(panelContainer:HTMLElement){\n    this.platformSelect = new UISelect();\n    this.platformSelectListener = {\n      onItemSelected:() => {\n        this.updateDevices(this.getSelectedPlatform());\n      }\n    };\n    this.platformSelect.addSelectListener(this.platformSelectListener);\n    let row=this.createFormRow(createText('Platform'),this.platformSelect.element(),'platforms');\n    insertElement(panelContainer,row);\n  }\n\n  private createVariantSelect(panelContainer:HTMLElement){\n    this.variantsLineLoader= new UILineLoader();\n    this.variantSelect = new UISelect();\n    let wrapper=createElement('div',{\n      className:'line-loader-wrapper',\n      elements:[\n        this.variantSelect.element(),\n        this.variantsLineLoader.element()\n      ]\n    });\n    let row=this.createFormRow(createText('Variant'),wrapper,'variants');\n    insertElement(panelContainer,row);\n  }\n\n  private createNodeTaskSelect(panelContainer:HTMLElement){\n    this.npmScriptsSelect = new UISelect();\n    let row=this.createFormRow(createText('Npm scripts (before task)'),this.npmScriptsSelect.element(),'npmScript');\n    insertElement(panelContainer,row);\n  }\n\n  private createDeviceSelect(panelContainer:HTMLElement){\n    this.deviceSelect = new UISelect();\n    this.deviceLineLoader= new UILineLoader();\n    let wrapper=createElement('div',{\n      className:'line-loader-wrapper',\n      elements:[\n        this.deviceSelect.element(),\n        this.deviceLineLoader.element()\n      ]\n    });\n    let row=this.createFormRow(createText('Device / Emulator'),wrapper,'devices');\n    insertElement(panelContainer,row);\n  }\n\n  private createReleaseCheckbox(panelContainer:HTMLElement){\n    this.isReleaseEl = createInput({\n      type:'checkbox'\n    });\n    this.isReleaseEl.classList.remove('form-control');\n    this.isReleaseEl.setAttribute('name','release');\n    let label:HTMLElement= createElement('label',{\n      className:\"label-for\"\n    });\n    label.innerText = 'Release'\n    label.setAttribute('for','release');\n    let row= this.createFormRow(label,this.isReleaseEl,'isRelease')\n    insertElement(panelContainer,row);\n  }\n\n  private updateTaskName(){\n    this.taskNameEl.setValue(this.taskConfig.name);\n  }\n\n  private updatePlatforms(selected?:CordovaPlatform){\n    let platforms:Array<CordovaPlatform> = this.projectInfo? this.projectInfo.platforms: [];\n    let model:Array<UISelectItem> = map <CordovaPlatform,UISelectItem> (platforms, (single:CordovaPlatform) => {\n      return {\n        value:single.name,\n        name:single.name\n      };\n    });\n    this.platformSelect.setItems(model);\n    if(selected){\n      this.platformSelect.setSelectedItem(selected.name);\n    }\n  }\n\n  private updateNodeScripts(def?:string){\n    let npmScripts:Array<string> = this.projectInfo ? this.projectInfo.npmScripts : [];\n    let model:Array<UISelectItem> = map<any,UISelectItem>(npmScripts,(value:string ,key:string) => {\n      return {\n        name:key,\n        value:key\n      }\n    });\n    model.unshift({\n      name: NONE_PLACEHOLDER,\n      value:''\n    })\n    this.npmScriptsSelect.setItems(model);\n    if(def){\n      this.npmScriptsSelect.resetSelection();\n      this.npmScriptsSelect.setSelectedItem(def);\n    }\n  }\n\n  private generateNewDeviceRid():number{\n     return (this.deviceRequestId = this.deviceRequestId + 1);\n  }\n  private isOldDeviceRequest(rid:number){\n    return rid < this.deviceRequestId;\n  }\n\n  private async updateDevices(platform:CordovaPlatform,def?:CordovaDevice){\n    if(!this.deviceManager || !platform){\n      return Promise.resolve([]);\n    }\n    let rid = this.generateNewDeviceRid();\n    this.deviceLineLoader.setOnLoading(true);\n    let devices= await this.deviceManager.getDeviceList(platform.name);\n    let model:Array<UISelectItem> = map<CordovaDevice,UISelectItem>(devices,(single:CordovaDevice) => {\n      return {\n        value:single.targetId,\n        name:single.name\n      }\n    });\n    if(this.isOldDeviceRequest(rid)){\n      return;\n    }\n    this.deviceSelect.setItems(model);\n    if(def){\n      this.deviceSelect.resetSelection();\n      this.deviceSelect.setSelectedItem(def.targetId);\n    }\n    this.deviceLineLoader.setOnLoading(false);\n  }\n\n  private async updateVariants(def?:string){\n    if(!this.variantManager){\n      return Promise.reject('INVALID_VARIANT_MANAGER');\n    }\n    this.variantsLineLoader.setOnLoading(true);\n    let variantModel = await this.variantManager.load();\n    let model:Array<UISelectItem> = map<Variant,UISelectItem>(variantModel.variants,(variant:Variant) => {\n      return {\n        value:variant.name,\n        name:variant.name\n      }\n    });\n    model.unshift({\n      value:'',\n      name: NONE_PLACEHOLDER\n    });\n    this.variantSelect.setItems(model);\n    if(def){\n      this.variantSelect.setSelectedItem(def);\n    }\n    this.variantsLineLoader.setOnLoading(false);\n  }\n\n  private createRowId(elementId:string):string{\n    return \"row-\" + elementId;\n  }\n\n  private createFormRow(text: HTMLElement | Text,element:HTMLElement,rowId?:string):HTMLElement{\n    let row=createElement('div',{\n      className:'control-row',\n      id: this.createRowId(rowId || element.id),\n      elements:[\n        text,\n        element]\n    });\n    return row;\n  }\n\n  contextualize(taskConfig:CordovaTaskConfiguration,projectInfo:CordovaProjectInfo){\n    if(!taskConfig){\n      return;\n    }\n    this.taskConfig = taskConfig;\n    this.projectInfo = projectInfo;\n    if(!this.deviceManager){\n      this.deviceManager = new CordovaDeviceManager(this.projectInfo.path);\n    }\n    if(!this.variantManager){\n      this.variantManager = new VariantsManager(this.projectInfo.path);\n    }\n    setTimeout(() => {\n      this.setAllTabsVisibility(true);\n      this.contextualizeImpl();\n    });\n  }\n\n  private setAllTabsVisibility(visible:boolean){\n    let ids:string[] = this.tabbedView.getAllIds();\n    forEach(ids,(singleId) => {\n      let tab = this.tabbedView.getTabItemById(singleId);\n      if(tab){\n        tab.view.style.visibility = visible? 'visible':'hidden'\n      }\n    });\n  }\n\n  private setRowVisible(rowId:string,visible:boolean){\n    var el = document.getElementById(rowId);\n    if(el && el.style){\n      el.style.display = visible? 'block' : 'none';\n    }\n  }\n  private setElementVisible(el:HTMLElement,visible:boolean){\n    if(el && el.style){\n      el.style.display = visible? 'block' : 'none';\n    }\n  }\n\n  private contextualizeImpl(){\n    /*if(!this.getSelectedPlatform()){\n      this.updatePlatforms();\n    }*/\n    this.updatePlatforms(this.taskConfig.selectedPlatform);\n\n    this.applyConstraintsToView(this.taskConfig.constraints);\n    this.taskViewEnvironmentTab.contextualize(this.taskConfig,this.projectInfo);\n\n  }\n\n  private applyConstraintsToView(constraints:TaskConstraints){\n      if(constraints.isDeviceEnabled){\n        this.updateDevices(this.getSelectedPlatform(),this.taskConfig.device);\n      }\n      this.setRowVisible(this.createRowId('devices'),constraints.isDeviceEnabled);\n\n      if(constraints.isVariantEnabled){\n        this.updateVariants(this.taskConfig.variantName);\n      }\n      this.setRowVisible(this.createRowId('variants'),constraints.isVariantEnabled);\n\n      if(constraints.isNodeTaskEnabled){\n        this.updateNodeScripts(this.taskConfig.nodeTasks ? this.taskConfig.nodeTasks[0] : null);\n      }\n      this.setRowVisible(this.createRowId('npmScript'),constraints.isNodeTaskEnabled);\n\n      if(constraints.isCustom){\n        this.updateTaskName();\n      }\n      this.setElementVisible(this.taskNameEl.element(),constraints.isCustom);\n  }\n\n  public resetContext():void{\n    this.taskNameEl.setValue('');\n    this.platformSelect.setItems([]);\n    this.deviceSelect.setItems([]);\n    this.variantSelect.setItems([]);\n    this.npmScriptsSelect.setItems([]);\n    this.setAllTabsVisibility(false);\n  }\n\n\n  private getSelectedPlatform():CordovaPlatform{\n    let platformValue = this.platformSelect.getSelectedItem();\n    if(platformValue){\n      return { name:platformValue };\n    }\n    return null;\n  }\n\n  private getSelectedDevice():CordovaDevice {\n    let value= this.deviceSelect.getSelectedItem();\n    if(value){\n      return {\n        targetId:value,\n        name:value\n      }\n    }\n    return null;\n  }\n\n  private getSelectedVariantName():string{\n    let value = this.variantSelect.getSelectedItem()\n    return value || null;\n  }\n\n  private getSelectedNpmScript():string {\n    let value = this.npmScriptsSelect.getSelectedItem();\n    Logger.consoleLog('selectedItem:',value);\n    return value || null;\n  }\n\n  getCurrentConfiguration():CordovaTaskConfiguration{\n    Logger.consoleLog(\"getCurrentConfiguration\");\n    let platformValue = this.platformSelect.getSelectedItem();\n    if(platformValue){\n      this.taskConfig.selectedPlatform = {name:platformValue};\n    }\n    let device = this.deviceSelect.getSelectedItem();\n    if(device){\n      this.taskConfig.device = {\n        targetId: device,\n        name:device\n      };\n    }\n    let release = this.isReleaseEl['checked'];\n    if(release){\n      this.taskConfig.isRelease = true\n    }\n    let variant = this.getSelectedVariantName();\n\n    if(variant){\n      this.taskConfig.variantName = variant;\n    }else{\n      this.taskConfig ? this.taskConfig.variantName = null : null;\n    }\n\n    let nodeScript = this.getSelectedNpmScript();\n    if(nodeScript){\n      this.taskConfig.nodeTasks = [nodeScript];\n    }else{\n      this.taskConfig ? this.taskConfig.nodeTasks = null : null;\n    }\n\n    return this.taskConfig;\n\n\n  }\n}\n"]}