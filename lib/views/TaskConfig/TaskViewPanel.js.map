{"version":3,"file":"TaskViewPanel.js","sourceRoot":"","sources":["../../../src/views/TaskConfig/TaskViewPanel.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createButton,\n  createIcon,\n  attachEventFromObject,\n  createSelect,\n  createInput\n} from '../../element/index';\n\nimport { UIBaseComponent, UIExtComponent } from '../../ui-components/UIComponent'\nimport { CordovaProjectInfo } from '../../cordova/Cordova'\nimport { CordovaTaskConfiguration, CordovaTask } from '../../cordova/CordovaTasks'\nimport { TaskProvider } from '../../tasks/TaskProvider'\nimport { TaskUtils } from '../../tasks/TaskUtils'\nimport { find, clone, cloneDeep, remove, findIndex } from 'lodash'\nimport { EventEmitter }  from 'events'\nimport { Logger } from  '../../logger/Logger'\nimport { TaskViewContentPanel } from './TaskViewContentPanel'\nimport { TaskViewSelectorPanel } from './TaskViewSelectorPanel'\nconst RELOAD_DELAY:number = 500;\n\nexport class TaskViewPanel extends UIExtComponent {\n  private threeViewPanel: TaskViewSelectorPanel;\n  private taskContentPanel : TaskViewContentPanel;\n  private project:CordovaProjectInfo;\n  private evtEmitter:EventEmitter;\n  private lastSelected:CordovaTaskConfiguration;\n  private tasks:Array<CordovaTaskConfiguration> = [];\n  constructor(){\n    super();\n    this.evtEmitter = new EventEmitter();\n    this.initUI();\n  }\n  initUI():void{\n    this.mainElement = createElement('div',{\n      className:'de-workbench-taskpanel-container'\n    });\n    this.threeViewPanel = this.createTreeViewPanel();\n    this.threeViewPanel.setOnTaskChangeListener((itemId:string) => {\n      this.applyConfigToModel(this.lastSelected);\n      let config= this.getTaskConfigurationByName(itemId);\n      Logger.consoleLog(\"getTaskConfigurationByName return\",config,\"For name\",itemId);\n      if(config){\n        this.lastSelected = config;\n      }\n      this.taskContentPanel.contextualize(config,this.project);\n      this.fireEvent('didTaskSelected', config);\n    });\n\n    this.evtEmitter.addListener('didAddTask',() => {\n      Logger.consoleLog(\"Add task\");\n    });\n\n    this.evtEmitter.addListener('didRemoveTask',() => {\n      Logger.consoleLog(\"Remove task\");\n      let target= this.lastSelected;\n      if(target.constraints.isCustom){\n        this.removeTask(target);\n        this.lastSelected = null;\n      }\n      setTimeout(() => {\n          this.update();\n          this.taskContentPanel.resetContext();\n      });\n    });\n    let timer=null;\n    this.evtEmitter.addListener('didChangeName',(nodeId:string) => {\n      if(timer){\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        timer = null;\n        this.update();\n        this.threeViewPanel.setSelected(nodeId,true);\n      },RELOAD_DELAY);\n    })\n\n    this.evtEmitter.addListener('didCloneTask',() => {\n      Logger.consoleLog(\"Duplicate task\");\n      if(this.lastSelected){\n        this.cloneAndAddNewTasks(this.lastSelected);\n        setTimeout(() => {\n            this.update();\n        });\n      }\n    });\n    this.taskContentPanel = this.createContentPanel();\n    insertElement(this.mainElement,this.threeViewPanel.element());\n    insertElement(this.mainElement,this.taskContentPanel.element());\n  }\n\n  private createContentPanel():TaskViewContentPanel{\n    let taskContentPanel = new TaskViewContentPanel(this.evtEmitter);\n    return taskContentPanel;\n  }\n\n  private createTreeViewPanel():TaskViewSelectorPanel{\n    let taskThreeViewContainer = new TaskViewSelectorPanel(this.evtEmitter);\n    return taskThreeViewContainer;\n  }\n\n  setProject(project:CordovaProjectInfo):void{\n    this.project= project;\n    this.loadTasks();\n  }\n\n  loadTasks(){\n    TaskProvider.getInstance().loadTasksForProject(this.project.path).then((tasks) => {\n      Logger.getInstance().debug(\"Task loading done\");\n      this.tasks = tasks;\n      this.update();\n    },(err) => {\n      Logger.getInstance().error(err)\n    }).catch((ex) => {\n      Logger.getInstance().error(ex);\n    });\n  }\n\n  private update(){\n    this.threeViewPanel.buildAndAddTreeView(this.tasks);\n  }\n\n  private getTaskConfigurationByName(name:string):CordovaTaskConfiguration{\n    return find(this.tasks,(single:CordovaTaskConfiguration) => {\n      return single.name == name;\n    });\n  }\n\n  private cloneAndAddNewTasks(lastSelected:CordovaTaskConfiguration){\n    let newTask = cloneDeep(lastSelected);\n    newTask.name = TaskUtils.createUniqueTaskName(this.tasks,lastSelected.name);\n    newTask.constraints.isCustom = true;\n    this.tasks.push(newTask);\n  }\n\n  private removeTask(task:CordovaTaskConfiguration){\n    remove(this.tasks,(item:CordovaTaskConfiguration) => {\n      return item.name == task.name;\n    });\n  }\n\n  public getConfiguration():CordovaTaskConfiguration{\n    return this.taskContentPanel.getCurrentConfiguration();\n  }\n\n  private applyConfigToModel(config:CordovaTaskConfiguration){\n    this.taskContentPanel.getCurrentConfiguration();\n  }\n\n  public saveAllConfiguration(){\n    if(this.lastSelected){\n      this.applyConfigToModel(this.lastSelected);\n    }\n    if(this.project){\n      TaskProvider.getInstance().storeTasks(this.tasks,this.project.path);\n    }\n  }\n}\n"]}