{"version":3,"file":"TaskViewEnvironmentTab.js","sourceRoot":"","sources":["../../../src/views/TaskConfig/TaskViewEnvironmentTab.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\nimport {\n  createText,\n  createElement,\n  insertElement,\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  attachEventFromObject,\n  createTextEditor\n} from '../../element/index';\n\nimport { UIExtendedListView, UIExtendedListViewModel, UIExtendedListViewValidationResult } from '../../ui-components/UIExtendedListView'\nimport { UIComponent, UIBaseComponent } from '../../ui-components/UIComponent'\nimport { UIButtonGroup, UIButtonGroupMode, UIButtonConfig } from '../../ui-components/UIButtonGroup'\nimport { CordovaTaskConfiguration } from '../../cordova/CordovaTasks'\nimport { CordovaProjectInfo } from '../../cordova/Cordova'\nimport { Logger,LoggerListener ,LogLevel} from '../../logger/Logger'\n\nimport { EventEmitter }  from 'events'\n\nexport class TaskViewEnvironmentTab extends UIBaseComponent {\n  private environmentVarRenderer: TaskViewEnvironmentRenderer;\n  private cliParamsRenderer: TaskViewCliParamsRenderer;\n  constructor(){\n    super();\n    this.initUI();\n  }\n  initUI(){\n    this.environmentVarRenderer = new TaskViewEnvironmentRenderer();\n    this.cliParamsRenderer = new TaskViewCliParamsRenderer();\n    this.mainElement=createElement('div',{\n      className:'task-env-tab-container',\n      elements:[\n        this.environmentVarRenderer.element(),\n        this.cliParamsRenderer.element()\n      ]\n    });\n  }\n  contextualize(task:CordovaTaskConfiguration,project: CordovaProjectInfo){\n    if(!task.envVariables){\n      task.envVariables = [];\n    }\n    this.environmentVarRenderer.updateUI(task.envVariables);\n    if(!task.cliParams){\n      task.cliParams = [];\n    }\n    this.cliParamsRenderer.updateUI(task.cliParams);\n  }\n}\n\n\nclass TaskViewEnvironmentRenderer extends UIBaseComponent {\n  private listView:UIExtendedListView;\n  private model:EnvironmentVarListViewModel;\n  private toolbar:HTMLElement\n  private events:EventEmitter;\n  constructor(){\n    super();\n    this.events = new EventEmitter();\n    this.initUI()\n  }\n  private initUI(){\n    this.initToolbar();\n    this.initListView();\n    this.mainElement = createElement('div', {\n      elements: [ this.toolbar, this.listView.element() ],\n      className: 'de-workbench-variants-ctrl-prop-renderer'\n    })\n  }\n\n  private initToolbar(){\n    let buttonGroup = new UIButtonGroup(UIButtonGroupMode.Standard);\n    buttonGroup.addButton(new UIButtonConfig()\n                            .setId('add')\n                            .setCaption(\"+\")\n                            .setClickListener(()=>{\n                              this.model.addNewProperty();\n                             }))\n    buttonGroup.addButton(new UIButtonConfig()\n                            .setId('add')\n                            .setCaption(\"-\")\n                            .setClickListener(()=>{\n                                this.removeSelectedRow();\n                             }))\n    buttonGroup.element().classList.add('btn-group-xs')\n    this.toolbar = createElement('div',{\n      elements : [\n        buttonGroup.element()\n      ],\n      className: 'de-workbench-variants-ctrl-toolbar'\n    })\n  }\n\n  private initListView(){\n    this.model = this.buildModel([])\n      .addEventListener('didModelChanged',()=>{\n        this.fireDataChanged();\n      });\n    this.listView = new UIExtendedListView(this.model);\n  }\n\n  protected removeSelectedRow(){\n    let row = this.listView.getSelectedRow();\n    this.model.removePropertyAt(row)\n    this.events.emit(\"didPropertyRemoved\")\n  }\n\n  updateUI(values:Array<EnvironmentVariable>){\n    Logger.consoleLog('update ui');\n    this.model.forceProperties(values);\n  }\n  private buildModel(values:Array<EnvironmentVariable>):EnvironmentVarListViewModel{\n    return new EnvironmentVarListViewModel(values);\n  }\n\n  private fireDataChanged(){\n    Logger.consoleLog('fireDataChanged');\n    this.events.emit('didEnvironmenVarDataChanged');\n  }\n\n}\n\ninterface EnvironmentVariable {\n  name:string\n  value:string\n}\n\n\nclass EnvironmentVarListViewModel implements UIExtendedListViewModel {\n\n  protected properties:Array<EnvironmentVariable>\n  protected events:EventEmitter;\n\n  constructor(properties?:Array<EnvironmentVariable> ){\n    this.events = new EventEmitter();\n    this.properties = properties != null? properties : [];\n  }\n\n  public addEventListener(event:string,listener):EnvironmentVarListViewModel {\n      this.events.addListener(event, listener);\n      return this;\n  }\n\n  public removeEventListener(event:string,listener):EnvironmentVarListViewModel {\n      this.events.removeListener(event, listener);\n      return this;\n  }\n\n  public addNewProperty(){\n    this.properties.push({\n      name:\"New Env var Name\",\n      value:\"New Env var Value\"\n    });\n    this.fireModelChanged();\n  }\n\n  public removePropertyAt(index:number){\n    if (index>=0){\n      this.properties.splice(index, 1);\n      this.fireModelChanged();\n    }\n  }\n\n  hasHeader():boolean{\n    return true\n  }\n\n  getRowCount():number {\n    return this.properties.length\n  }\n\n  getColCount():number {\n    return 2\n  }\n\n  getValueAt(row:number, col:number):any {\n    let property:EnvironmentVariable =  this.properties[row];\n    if (col===0){\n      return property.name;\n    } else if (col===1){\n      return property.value;\n    }\n  }\n\n  getClassNameAt(row:number, col:number):string{\n    return \"\"\n  }\n\n  getColumnName(col:number):string {\n    if (col===0){\n      return \"Env Variable name\"\n    } else if (col===1){\n      return \"Value\"\n    }\n    return col+\"?\"\n  }\n\n  getClassName():string {\n    return \"\"\n  }\n\n  isCellEditable(row:number, col:number):boolean {\n    return true;\n  }\n\n  onValueChanged(row:number, col:number, value:any) {\n    let property:EnvironmentVariable =  this.properties[row];\n    if (col===0){\n      property.name = value;\n    } else if (col===1){\n      property.value = value;\n    }\n    this.fireModelChanged();\n  }\n\n  onEditValidation(row:number, col:number, value:any):UIExtendedListViewValidationResult {\n    return {\n      validationStatus:true,\n      validationErrorMessage:\"\",\n      showValidationError:false\n    };\n  }\n\n  protected fireModelChanged(){\n    this.events.emit(\"didModelChanged\", this)\n  }\n\n  forceProperties(values:Array<EnvironmentVariable>){\n    this.properties = values;\n    this.fireModelChanged();\n  }\n\n  public destroy(){\n    this.events.removeAllListeners();\n    this.events = null;\n  }\n\n}\n\n\nclass TaskViewCliParamsRenderer extends UIBaseComponent {\n  private listView:UIExtendedListView;\n  private model:CliParamsListViewModel;\n  private toolbar:HTMLElement\n  private events:EventEmitter;\n  constructor(){\n    super();\n    this.events = new EventEmitter();\n    this.initUI();\n  }\n  private initUI(){\n    this.initToolbar();\n    this.initListView();\n    this.mainElement = createElement('div', {\n      elements: [ this.toolbar, this.listView.element() ],\n      className: 'de-workbench-variants-ctrl-prop-renderer'\n    })\n  }\n  private initToolbar(){\n    let buttonGroup = new UIButtonGroup(UIButtonGroupMode.Standard);\n    buttonGroup.addButton(new UIButtonConfig()\n                            .setId('add')\n                            .setCaption(\"+\")\n                            .setClickListener(()=>{\n                              this.model.addNewProperty();\n                             }))\n    buttonGroup.addButton(new UIButtonConfig()\n                            .setId('add')\n                            .setCaption(\"-\")\n                            .setClickListener(()=>{\n                                this.removeSelectedRow();\n                             }))\n    buttonGroup.element().classList.add('btn-group-xs')\n    this.toolbar = createElement('div',{\n      elements : [\n        buttonGroup.element()\n      ],\n      className: 'de-workbench-variants-ctrl-toolbar'\n    })\n  }\n\n  private initListView(){\n    this.model = this.buildModel([])\n      .addEventListener('didModelChanged',()=>{\n        this.fireDataChanged();\n      });\n    this.listView = new UIExtendedListView(this.model);\n  }\n\n  protected removeSelectedRow(){\n    let row = this.listView.getSelectedRow();\n    this.model.removePropertyAt(row)\n    this.events.emit(\"didPropertyRemoved\")\n  }\n\n  updateUI(values:Array<string>){\n    Logger.consoleLog('update ui');\n    this.model.forceValues(values);\n  }\n  private buildModel(values:Array<string>):CliParamsListViewModel{\n    return new CliParamsListViewModel(values);\n  }\n\n  private fireDataChanged(){\n    Logger.consoleLog('fireDataChanged');\n    this.events.emit('didCliParamsDataChanged');\n  }\n}\n\nclass CliParamsListViewModel implements UIExtendedListViewModel{\n  protected values:Array<string>\n  protected events:EventEmitter;\n\n  constructor(values?:Array<string> ){\n    this.events = new EventEmitter();\n    this.values = values != null? values : [];\n  }\n\n  public addEventListener(event:string,listener):CliParamsListViewModel {\n      this.events.addListener(event, listener);\n      return this;\n  }\n\n  public removeEventListener(event:string,listener):CliParamsListViewModel {\n      this.events.removeListener(event, listener);\n      return this;\n  }\n\n  public addNewProperty(){\n    this.values.push(\"--NewParams\");\n    this.fireModelChanged();\n  }\n\n  public removePropertyAt(index:number){\n    if (index>=0){\n      this.values.splice(index, 1);\n      this.fireModelChanged();\n    }\n  }\n\n  hasHeader():boolean{\n    return true\n  }\n\n  getRowCount():number {\n    return this.values.length\n  }\n\n  getColCount():number {\n    return 1\n  }\n\n  getValueAt(row:number, col:number):any {\n    let property:string =  this.values[row];\n    return property\n  }\n\n  getClassNameAt(row:number, col:number):string{\n    return \"\"\n  }\n\n  getColumnName(col:number):string {\n    if (col===0){\n      return \"Cli Args\"\n    }\n    return col+\"?\"\n  }\n\n  getClassName():string {\n    return \"\"\n  }\n\n  isCellEditable(row:number, col:number):boolean {\n    return true;\n  }\n\n  onValueChanged(row:number, col:number, value:any) {\n    let property:string = this.values[row];\n    if (col===0){\n      this.values[row] = value;\n    }\n    this.fireModelChanged();\n  }\n\n  onEditValidation(row:number, col:number, value:any):UIExtendedListViewValidationResult {\n    let sValue:string = value;\n    if(value.indexOf(' ') >= 0){\n      return {\n        validationStatus:true,\n        validationErrorMessage:\"Space are not supported\",\n        showValidationError:true\n      };\n    }\n    return {\n      validationStatus:true,\n      validationErrorMessage:\"\",\n      showValidationError:false\n    };\n  }\n\n  protected fireModelChanged(){\n    this.events.emit(\"didModelChanged\", this)\n  }\n\n  forceValues(values:Array<string>){\n    this.values = values;\n    this.fireModelChanged();\n  }\n\n  public destroy(){\n    this.events.removeAllListeners();\n    this.events = null;\n  }\n\n}\n"]}