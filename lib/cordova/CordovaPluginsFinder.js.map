{"version":3,"file":"CordovaPluginsFinder.js","sourceRoot":"","sources":["../../src/cordova/CordovaPluginsFinder.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n\n/*!\n * Dynamic Engine Workbench\n * Copyright(c) 2017 Dynamic Engine Team @ Vipera Plc\n * MIT Licensed\n */\n\nimport { Logger } from '../logger/Logger'\nimport { CordovaPlugin } from './Cordova'\n\nconst _ = require(\"lodash\");\nconst $ = require(\"jquery\");\nconst http = require(\"http\");\nconst httpReq = require (\"request\");\n\n\n/**\n * This class allows to search plugins from the community repository\n */\nexport class CordovaPluginsFinder {\n\n  protected pluginsData:any = {};\n\n    constructor(){\n      Logger.getInstance().debug(\"Creating Cordova Plugins Finder...\");\n    }\n\n    /**\n     * Build the query\n     */\n    private buildQueryParamsString(names,keywords,platforms?):string{\n      var ret = \"\";\n      var i = 0;\n\n      if (keywords && keywords.length>0){\n        for (i=0;i<keywords.length;i++){\n          if (ret.length>0){\n            ret += \"+OR+\";\n          }\n          ret += \"keywords:\" + keywords[i];\n        }\n      }\n\n      /**\n      //the platforms are keywords\n      if (platforms && platforms.length>0){\n        for (i=0;i<platforms.length;i++){\n          if (ret.length>0){\n            ret += \"+OR+\";\n          }\n          ret += \"keywords:\" + platforms[i];\n        }\n      }\n      **/\n\n      if (names && names.length>0){\n        for (i=0;i<names.length;i++){\n          if (ret.length>0){\n            ret += \"+OR+\";\n          }\n          ret += \"name:*\" + names[i] +\"*\";\n        }\n      }\n\n      if (names && names.length>0){\n        for (i=0;i<names.length;i++){\n          if (ret.length>0){\n            ret += \"+OR+\";\n          }\n          ret += \"description:*\" + names[i] +\"*\";\n        }\n      }\n\n      /**\n      //Limit to Cordova\n      if (ret.length>0){\n        ret += \"+AND+\";\n      }\n      ret += 'keywords:\"ecosystem:cordova\"';\n      **/\n\n      if (ret.length>0){\n        ret = \"&q=\" + ret;\n      }\n      return ret;\n    }\n\n    /**\n     * Search plugins from community\n     */\n    public search(names,keywords,platforms):Promise<Array<CordovaPlugin>>{\n      return new Promise((resolve, reject) => {\n        var baseQueryUrl = 'https://npmsearch.com/query?fields=name,keywords,license,description,author,modified,homepage,version,rating&ecosystem:cordova&sort=rating:desc&size=500&start=0';\n        var queryParams = this.buildQueryParamsString(names, keywords);\n        Logger.getInstance().debug(\"Query:\" + queryParams);\n        var queryUrl = baseQueryUrl + queryParams; //'q=keywords:camera+AND+author:neuber';\n        Logger.getInstance().debug(\"QueryURL:\" + queryUrl);\n        httpReq(queryUrl, function (error, response, body) {\n            if (error){\n              Logger.getInstance().error(\"Cordova Plugins Query error: \", error);\n              reject(error);\n            } else {\n              Logger.getInstance().info(\"Cordova Plugins Query Success\");\n              let pluginsArray = new Array();\n              let rawJsonArr:any = JSON.parse(body).results;\n              for (var i=0;i<rawJsonArr.length;i++){\n                let rawJson = rawJsonArr[i];\n                if (CordovaPluginsFinder.filterPlugin(rawJson, platforms)){\n                  let cordovaPlugin = new CordovaPlugin();\n                  cordovaPlugin.author = rawJson.author[0];\n                  cordovaPlugin.description = rawJson.description[0];\n                  cordovaPlugin.version = rawJson.version[0];\n                  cordovaPlugin.id = rawJson.name[0];\n                  cordovaPlugin.name = rawJson.name[0];\n                  cordovaPlugin.installed = false;\n                  cordovaPlugin.homepage = \"https://www.npmjs.com/package/\" + cordovaPlugin.name;\n                  cordovaPlugin.lastUpdateTime = rawJson.modified[0];\n                  try {\n                    cordovaPlugin.rating = parseFloat(rawJson.rating[0]);\n                  } catch (ex){}\n                  cordovaPlugin.platforms = CordovaPluginsFinder.readAvailablePlatforms(rawJson);\n\n                  let platformIsOk = CordovaPluginsFinder.filterForPlatforms(cordovaPlugin, platforms);\n\n                  if (platformIsOk){\n                    pluginsArray.push(cordovaPlugin);\n                  }\n\n                }\n              }\n              resolve(pluginsArray);\n            }\n        });\n      });\n    }\n\n    private static filterForPlatforms(plugin:CordovaPlugin, platforms:Array<string>):boolean{\n      if (!platforms){\n        return true; //no filter\n      }\n      for (var i=0;i<platforms.length;i++){\n        if (_.findIndex(plugin.platforms,{ 'name' : platforms[i]}) >-1){\n          return true;\n        }\n      }\n      return false;\n    }\n\n    private static readAvailablePlatforms(jsonRaw:any):Array<string>{\n      if (!jsonRaw.keywords){\n        return [];\n      }\n      let ret = new Array();\n      if (CordovaPluginsFinder.isPlatformSupported(jsonRaw,'ios')){\n        ret.push({ name:\"ios\", displayName: \"iOS\" })\n      }\n      if (CordovaPluginsFinder.isPlatformSupported(jsonRaw,'android')){\n        ret.push({ name:\"android\", displayName: \"Android\" })\n      }\n      if (CordovaPluginsFinder.isPlatformSupported(jsonRaw,'browser')){\n        ret.push({ name:\"browser\", displayName: \"Browser\" })\n      }\n      return ret\n    }\n\n    private static isPlatformSupported(jsonRaw:any, platform:string):boolean {\n      if (_.indexOf(jsonRaw.keywords, 'cordova-' + platform )>-1){\n        return true;\n      }\n      else if (_.indexOf(jsonRaw.keywords, platform )>-1){\n        return true;\n      }\n      else return false;\n    }\n\n    private static filterPlugin(jsonRaw:any, platforms:Array<string>):boolean{\n      if (!CordovaPluginsFinder.isCordovaPlugin(jsonRaw)){\n        return false;\n      }\n      return true;\n    }\n\n    private static isCordovaPlugin(jsonRaw:any):boolean{\n      if (jsonRaw.keywords){\n        return (_.indexOf(jsonRaw.keywords, 'ecosystem:cordova')>-1)\n      } else {\n        return false;\n      }\n    }\n\n}\n"]}